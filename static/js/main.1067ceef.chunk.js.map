{"version":3,"sources":["../../display/dist/constants/index.js","../../display/dist/utils/index.js","../../display/dist/pitch-display/index.js","components/button/index.js","constants/colors.js","model.ts","components/pitch/index.tsx","components/pitch/pitch-monitor.tsx","components/main/app-frame.tsx","components/main/about.tsx","services/tinyurl.js","services/ultrastar-parser.js","components/importer/index.js","components/error-modal/index.js","components/main/sing.js","components/main/index.js","App.tsx","reportWebVitals.ts","index.tsx","services/s1Encoding.js"],"names":["NOTE_STRINGS","centsOffFromPitch","frequency","note","Math","floor","log","pow","frequencyFromNoteNumber","PitchDisplay","container","timeSpan","this","frequencies","melodyNotes","introStateListeners","background","highlight","style","position","canvasStyle","bgCanvas","document","createElement","setAttribute","bgContext","getContext","melodyCanvas","melodyContext","noteCanvas","noteContext","appendChild","lastSongPos","speedChanged","undefined","playingSpeed","melodyStart","inIntro","resize","callback","push","i","length","splice","w","clientWidth","h","clientHeight","dpr","window","devicePixelRatio","scaledW","scaledH","width","height","scale","scaleX","scaleLinear","domain","range","margin","scaleY","render","time","songPos","calculateSongPos","start","prevNote","duration","end","Infinity","nextNote","melodyPitch","f","noteNum","round","noteFromPitch","pitch","nearestMelodyNote","getNearestMelodyNote","diff","Object","assign","filter","val","now","changePlayingSpeed","speed","Date","getTime","full","cleanupFrequencies","drawBackground","drawMelody","drawNotes","drawTimeMarkers","checkIntroState","nowInIntro","color","fillStyle","clearRect","fillRect","y","font","fillText","beginPath","strokeStyle","notes","t","c","clarity","x","arc","PI","fill","marks","mark","ctx","lineWidth","lineCap","startX","endX","moveTo","lineTo","stroke","ControlButton","colorPressed","className","Icon","onCancel","onPress","onRelease","size","useState","pressed","setPressed","handlePress","handleRelease","handleCancel","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","onTouchCancel","ForwardButton","props","SkipBackwardCircleFill","PauseButton","PauseCircleFill","StopButton","StopCircleFill","SkipStartButton","skipIntroMode","setSkipIntroMode","icon","SkipEndCircleFill","SkipStartCircleFill","BACKGROUND","store","createStore","windowSize","detectorName","clarityThreshold","enabled","loading","loaded","stream","audioOptions","audio","echoCancellation","autoGainControl","workerConnection","melody","error","setWindowSize","action","state","payload","setDetectorName","setClarityThreshold","setEnabled","setStream","setLoading","setLoaded","setWorkerConnection","setError","checkAudioContextSupport","thunk","actions","getState","AudioContext","webkitAudioContext","console","initializeStream","a","options","navigator","mediaDevices","getUserMedia","stopStream","getTracks","stop","initializeWorker","worker","Worker","process","messenger","WorkerMessenger","ParentHandshake","connection","setMelodyNotes","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","PitchComponent","freq","pitchDisplay","useRef","setInIntro","updatePitch","useCallback","current","pushFrequency","requestAnimationFrame","requestRef","useEffect","animate","cancelAnimationFrame","useAnimationFrame","onResize","addEventListener","removeEventListener","hasNotes","btnColor","btnColorPressed","onDisplayRef","element","setBackgroundColor","playSong","subscribeToIntroState","onStop","skipIntroPopover","Popover","id","Title","as","Content","Fragment","ref","Navbar","fixed","bg","OverlayTrigger","show","placement","overlay","seekToFirstNote","pauseSong","fastForwardSong","convertByteToFloatBuffer","byteBuf","floatBuf","PitchMonitor","powerThreshold","pitchRenderer","React","setFreq","setClarity","pendingRef","pitchSetupRef","setupConnection","remoteHandle","call","pitchSetup","buffer","Float32Array","audioContext","mediaStreamSource","createMediaStreamSource","analyser","createAnalyser","getFloatTimeDomainData","byteBuffer","Uint8Array","fftSize","connect","warn","getByteTimeDomainData","sampleRate","result","escape","cancelRender","renderFrame","PitchRenderer","AppFrame","children","params","qs","parse","location","search","substr","s1","decodeS1","alert","toString","readMelodyNotes","About","Container","Row","Col","href","target","rel","API","shortenLink","longUrl","url","encodeURIComponent","fetch","response","ok","text","shortUrl","parseUltraStarTxt","data","bpm","beatDuration","gap","lines","split","setBPM","value","parseHeader","line","parts","key","toLowerCase","parseFloat","replace","Error","parseNote","parseInt","floorStart","section","startsWith","FileForm","onComplete","title","setTitle","author","setAuthor","musicLink","setMusicLink","lyricsLink","setLyricsLink","file","setFile","validated","setValidated","useTinyURL","setUseTinyURL","creating","setCreating","fileError","setFileError","generateURL","appPath","queryParams","stringify","music","lyrics","createS1Notes","form","parsed","checkValidity","encoded","encodeS1","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","currentTarget","reader","FileReader","evt2","readAsText","Group","Label","Control","required","type","placeholder","maxLength","onChange","evt","controlId","File","custom","Input","accept","isInvalid","files","Feedback","Text","Check","label","checked","Button","variant","disabled","CopyButton","copied","setCopied","handle","clipboard","writeText","txt","onClick","Result","Card","body","Importer","setUrl","ErrorModal","onClose","Modal","onHide","backdrop","keyboard","Header","closeButton","Body","Footer","StartButton","active","setActive","setTimeout","clearTimeout","ExternalLink","link","SongInfo","newTitle","property","content","md","Sing","Tabs","Tab","defaultActiveKey","Nav","Item","Link","eventKey","Pane","Main","App","mainDisplay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","PRECISION","SHORT_BITS","LONG_BITS","canUseShort","base64","unsafeBase64","Buffer","from","pos","checksum","origChecksum","readUInt16BE","days","created","lastEnd","bytes","readUIntBE","buffers","lastPos","bitHandle","valueBits","shiftBits","alloc","writeUInt16BE","addTimestamp","num","writeUIntBE","checksumBuf","unshift","safeBase64","concat"],"mappings":"sTAEaA,EAAe,CACxB,IACA,UACA,IACA,UACA,IACA,UACA,IACA,IACA,UACA,IACA,UACA,KCNG,SAASC,EAAkBC,EAAWC,GACzC,OAAOC,KAAKC,MAAO,KAAOD,KAAKE,IAAIJ,EAJhC,SAAiCC,GACpC,OAAO,IAAMC,KAAKG,IAAI,GAAIJ,EAAO,IAAM,IAGQK,CAAwBL,IAAUC,KAAKE,IAAI,I,ICNxFG,E,WACF,WAAYC,GAA6B,IAAlBC,EAAkB,uDAAP,KAAO,oBACrCC,KAAKC,YAAc,GACnBD,KAAKE,YAAc,GACnBF,KAAKG,oBAAsB,GAC3BH,KAAKI,WAAa,UAClBJ,KAAKK,UAAY,UACjBL,KAAKF,UAAYA,EACjBE,KAAKF,UAAUQ,MAAMC,SAAW,WAChC,IAAMC,EAAc,iDACpBR,KAAKS,SAAWC,SAASC,cAAc,UACvCX,KAAKS,SAASG,aAAa,QAASJ,GACpCR,KAAKa,UAAYb,KAAKS,SAASK,WAAW,MAC1Cd,KAAKe,aAAeL,SAASC,cAAc,UAC3CX,KAAKe,aAAaH,aAAa,QAASJ,GACxCR,KAAKgB,cAAgBhB,KAAKe,aAAaD,WAAW,MAClDd,KAAKiB,WAAaP,SAASC,cAAc,UACzCX,KAAKiB,WAAWL,aAAa,QAASJ,GACtCR,KAAKkB,YAAclB,KAAKiB,WAAWH,WAAW,MAC9Cd,KAAKF,UAAUqB,YAAYnB,KAAKS,UAChCT,KAAKF,UAAUqB,YAAYnB,KAAKe,cAChCf,KAAKF,UAAUqB,YAAYnB,KAAKiB,YAChCjB,KAAKD,SAAWA,EAChBC,KAAKoB,YAAc,EACnBpB,KAAKqB,kBAAeC,EACpBtB,KAAKuB,aAAe,EACpBvB,KAAKwB,YAAc,EACnBxB,KAAKyB,SAAU,EACfzB,KAAK0B,S,kEAEaC,GAAU,WAE5B,OADA3B,KAAKG,oBAAoByB,KAAKD,GACvB,WAEH,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAK1B,oBAAoB2B,OAAQD,IACjD,GAAI,EAAK1B,oBAAoB0B,KAAOF,EAEhC,YADA,EAAKxB,oBAAoB4B,OAAOF,EAAG,M,+BAO/C,IAAIG,EAAIhC,KAAKF,UAAUmC,YACnBC,EAAIlC,KAAKF,UAAUqC,aAGjBC,EAAMC,OAAOC,iBACbC,EAAU/C,KAAKC,MAAM2C,EAAMJ,GAC3BQ,EAAUhD,KAAKC,MAAM2C,EAAMF,GACjClC,KAAKS,SAASgC,MAAQF,EACtBvC,KAAKS,SAASiC,OAASF,EACvBxC,KAAKa,UAAU8B,MAAMP,EAAKA,GAC1BpC,KAAKe,aAAa0B,MAAQF,EAC1BvC,KAAKe,aAAa2B,OAASF,EAC3BxC,KAAKgB,cAAc2B,MAAMP,EAAKA,GAC9BpC,KAAKiB,WAAWwB,MAAQF,EACxBvC,KAAKiB,WAAWyB,OAASF,EACzBxC,KAAKkB,YAAYyB,MAAMP,EAAKA,GAC5BpC,KAAK4C,OAASC,cACTC,OAAO,EAAG9C,KAAKD,SAAW,EAAIC,KAAKD,SAAW,IAC9CgD,MAAM,CAAC,EAAGf,IACf,IAAIgB,EAASd,GAAK9C,EAAa0C,OAAS,GACxC9B,KAAKiD,OAASJ,cACTC,OAAO,CAAC,EAAG,EAAI1D,EAAa0C,OAAS,IACrCiB,MAAM,CAACb,EAAIc,EAAQA,IACxBhD,KAAKkD,W,2CAGYC,GACjB,GAAKnD,KAAKE,YAAY4B,OAItB,IADA,IAAMsB,EAAUpD,KAAKqD,iBAAiBF,GAC7BtB,EAAI,EAAGA,EAAI7B,KAAKE,YAAY4B,OAAQD,IAAK,CAC9C,IAAMtC,EAAOS,KAAKE,YAAY2B,GAC1ByB,EAAQ,EACZ,GAAIzB,EAAI,EAAG,CACP,IAAM0B,EAAWvD,KAAKE,YAAY2B,EAAI,GAEtCyB,GAASC,EAASD,MAAQC,EAASC,SAAWjE,EAAK+D,OAAS,EAEhE,IAAIG,EAAMC,IACV,GAAI7B,EAAI7B,KAAKE,YAAY4B,OAAS,EAAG,CAEjC,IAAM6B,EAAW3D,KAAKE,YAAY2B,EAAI,GACtC4B,GAAOlE,EAAK+D,MAAQ/D,EAAKiE,SAAWG,EAASL,OAAS,EAE1D,GAAIF,GAAWE,GAASF,EAAUK,EAC9B,OAAOlE,K,oCAMLD,GAEV,IAIIsE,EAJEC,EAAIvE,EAAUA,UACdC,EDpGP,SAAuBD,GAC1B,IAAIwE,EAAgBtE,KAAKE,IAAIJ,EAAY,KAAOE,KAAKE,IAAI,GAA3C,GACd,OAAOF,KAAKuE,MAAMD,GAAW,GCkGZE,CAAcH,GAErBI,EAAQ1E,EADGF,EAAkBwE,EAAGtE,GACN,IAE1B2E,EAAoBlE,KAAKmE,qBAAqB7E,EAAU6D,MAC9D,GAAIe,EAAmB,CAEnB,IAAIE,GAAQH,EAAQC,EAAkBD,OAAS,GAC3CG,EAAO,EACPA,GAAQ,GAEHA,GAAQ,IACbA,GAAQ,IAEZR,EAAcM,EAAkBD,MAAQG,EAE5CpE,KAAKC,YAAY2B,KAAKyC,OAAOC,OAAOD,OAAOC,OAAO,GAAIhF,GAAY,CAAE2E,QAChEL,mB,2CAEa,WAEjB5D,KAAKC,YAAcD,KAAKC,YAAYsE,QAAO,SAACC,GAAD,OAAS,EAAKC,IAAMD,EAAIrB,KAAO,EAAKpD,SAAW,O,qCAE/EG,GACXF,KAAKE,YAAcA,EACnBF,KAAKwB,YAActB,EAAY4B,OAAS5B,EAAY,GAAGoD,MAAQ,I,iCAG/DtD,KAAK0E,mBAAmB,K,wCAGxB1E,KAAK0E,mBAAmB,K,kCAGxB1E,KAAK0E,mBAAmB,K,uCAEXD,GACb,OAAOzE,KAAKoB,YAAcpB,KAAKuB,cAAgBkD,EAAMzE,KAAKqB,gB,yCAE3CsD,GACf,IAAMF,GAAM,IAAIG,MAAOC,eACGvD,IAAtBtB,KAAKqB,eACLrB,KAAKqB,aAAeoD,GAExBzE,KAAKoB,YAAcpB,KAAKqD,iBAAiBoB,GACzCzE,KAAKuB,aAAeoD,EACpB3E,KAAKqB,aAAeoD,I,wCAGpBzE,KAAK0E,mBAAmB,GACxB1E,KAAKoB,YAAcpB,KAAKwB,c,+BAER,IAAbsD,IAAa,yDAChB9E,KAAKyE,KAAM,IAAIG,MAAOC,UAEtB,IAAMzB,EAAUpD,KAAKqD,iBAAiBrD,KAAKyE,KAC3CzE,KAAK+E,qBACDD,GACA9E,KAAKgF,iBAEThF,KAAKiF,WAAW7B,GAChBpD,KAAKkF,YACDlF,KAAKE,YAAY4B,QACjB9B,KAAKmF,gBAAgB/B,GAEzBpD,KAAKoF,gBAAgBhC,K,sCAETA,GACZ,IAAMiC,EAAajC,EAAUpD,KAAKwB,YAClC,GAAI6D,IAAerF,KAAKyB,QAAS,CAC7BzB,KAAKyB,QAAU4D,EACf,IAAK,IAAIxD,EAAI,EAAGA,EAAI7B,KAAKG,oBAAoB2B,OAAQD,IACjD7B,KAAKG,oBAAoB0B,GAAGwD,M,yCAIrBC,GACftF,KAAKI,WAAakF,EAClBtF,KAAKgF,mB,wCAESM,GACdtF,KAAKK,UAAYiF,EACjBtF,KAAKgF,mB,uCAGL,IAAIhD,EAAIhC,KAAKF,UAAUmC,YACnBC,EAAIlC,KAAKF,UAAUqC,aACvBnC,KAAKa,UAAU0E,UAAYvF,KAAKI,WAChCJ,KAAKa,UAAU2E,UAAU,EAAG,EAAGxD,EAAGE,GAClClC,KAAKa,UAAU4E,SAAS,EAAG,EAAGzD,EAAGE,GACjC,IAAK,IAAIL,EAAI,EAAGA,EAAI,EAAIzC,EAAa0C,SAAUD,EAAG,CAC9C,IAAI6D,EAAI1F,KAAKiD,OAAOpB,GACpB7B,KAAKa,UAAU0E,UAAYvF,KAAKK,UAAY,KAC5CL,KAAKa,UAAU4E,SAAS,EAAGC,EAAG1D,EAAG,GACjChC,KAAKa,UAAU0E,UAAYvF,KAAKK,UAChCL,KAAKa,UAAU8E,KAAO,iBACtB3F,KAAKa,UAAU+E,SAASxG,EAAayC,EAAIzC,EAAa0C,QAAS9B,KAAK4C,OAAO,GAAK,GAAI8C,EAAI,GAE5F1F,KAAKa,UAAU0E,UAAYvF,KAAKK,UAAY,KAC5CL,KAAKa,UAAU4E,SAASzF,KAAK4C,OAAO,GAAI,EAAG,EAAGV,K,kCAG9C,IAAIF,EAAIhC,KAAKF,UAAUmC,YACnBC,EAAIlC,KAAKF,UAAUqC,aACvBnC,KAAKkB,YAAYsE,UAAU,EAAG,EAAGxD,EAAGE,GACpClC,KAAKkB,YAAY2E,YACjB7F,KAAKkB,YAAY4E,YAAc,qBAE/B,IAPQ,EAOFC,EAAQ,GAPN,cAQc/F,KAAKC,aARnB,IAQR,2BAAwC,KAA/BX,EAA+B,QAChC0G,EAAI1G,EAAU6D,KACd8C,EAAI3G,EAAU4G,QACdC,EAAInG,KAAK4C,OAAOoD,EAAIhG,KAAKyE,KACvBR,EAAQ3E,EAAUsE,YAClBtE,EAAUsE,YACVtE,EAAU2E,MACZyB,EAAI1F,KAAKiD,QAAQgB,EFxNN,GEwN6B,IAG5C8B,EAAMnE,KAAK,CACPuB,KAAM6C,EACNG,IACAT,IACAQ,QAASD,EACTX,MANU,CAAC,IAAK,GAAI,OAjBpB,8BA2BR,cAAiBS,EAAjB,eAAwB,CAAnB,IAAIxG,EAAI,KACD4G,EAAyB5G,EAAzB4G,EAAGT,EAAsBnG,EAAtBmG,EAAGQ,EAAmB3G,EAAnB2G,QAASZ,EAAU/F,EAAV+F,MACvBtF,KAAKkB,YAAYqE,UAAjB,eAAqCD,EAAM,GAA3C,aAAkDA,EAAM,GAAxD,aAA+DA,EAAM,GAArE,aAAsF,GAAVY,EAA5E,KACAlG,KAAKkB,YAAY2E,YACjB7F,KAAKkB,YAAYkF,IAAID,EAAGT,EAAG,EAAG,EAAa,EAAVlG,KAAK6G,IACtCrG,KAAKkB,YAAYoF,U,sCAGTlD,GAIZ,IAHA,IAAIlB,EAAIlC,KAAKF,UAAUqC,aACjBoE,EAAQ,GAEL1E,GAAK7B,KAAKD,SAAW,EAAG8B,GAAK7B,KAAKD,SAAW,EAAG8B,GADxC,IAEb0E,EAAM3E,KAAK,CACPuE,EAAGnG,KAAK4C,OAAOf,EAAKuB,EAHX,KAITsC,EAAGxD,EAAI,KAGflC,KAAKkB,YAAYqE,UAAYvF,KAAKK,UAClC,cAAiBkG,EAAjB,eAAwB,CAAnB,IAAIC,EAAI,KACTxG,KAAKkB,YAAY2E,YACjB7F,KAAKkB,YAAYkF,IAAII,EAAKL,EAAGK,EAAKd,EAAG,EAAG,EAAa,EAAVlG,KAAK6G,IAChDrG,KAAKkB,YAAYoF,U,iCAGdlD,GACP,IAAIpB,EAAIhC,KAAKF,UAAUmC,YACnBC,EAAIlC,KAAKF,UAAUqC,aACjBsE,EAAMzG,KAAKgB,cACjByF,EAAIjB,UAAU,EAAG,EAAGxD,EAAGE,GACvBuE,EAAIX,YAAc,0BAClBW,EAAIC,UAAYxE,EAAI,GACpBuE,EAAIE,QAAU,QAPE,oBAQC3G,KAAKE,aARN,IAQhB,2BAAmC,KAA1BX,EAA0B,QACvB+D,EAA2B/D,EAA3B+D,MAAOE,EAAoBjE,EAApBiE,SAAUS,EAAU1E,EAAV0E,MACnB2C,EAAS5G,KAAK4C,OAAOU,EAAQF,GAC7ByD,EAAO7G,KAAK4C,OAAOU,EAAQF,EAAUI,GACrCkC,EAAI1F,KAAKiD,QAAQgB,EFzQR,GEyQ+B,IAC9CwC,EAAIZ,YAEJY,EAAIK,OAAOF,EAASH,EAAIC,UAAY,EAAGhB,GACvCe,EAAIM,OAAOF,EAAOJ,EAAIC,UAAY,EAAGhB,GACrCe,EAAIO,UAjBQ,mC,gECnPxB,SAASC,EAAT,GASI,IARF3B,EAQC,EARDA,MACA4B,EAOC,EAPDA,aACAC,EAMC,EANDA,UACAC,EAKC,EALDA,KACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,UACAC,EACC,EADDA,KACC,EAC6BC,oBAAS,GADtC,mBACMC,EADN,KACeC,EADf,KAEKC,EAAc,WAClBD,GAAW,GACPL,GACFA,KAGEO,EAAgB,WACpBF,GAAW,GACPJ,GACFA,KAGEO,EAAe,WACnBH,GAAW,GACPN,GACFA,KAGJ,OACE,qBACEF,UAAS,mBAAcO,EAAU,mBAAqB,GAA7C,YAAmDP,GAC5DY,YAAaH,EACbI,UAAWH,EACXI,aAAcH,EACdI,aAAcN,EACdO,WAAYN,EACZO,cAAeN,EAPjB,SASE,cAACV,EAAD,CAAM9B,MAAOoC,EAAUR,EAAe5B,EAAOkC,KAAMA,MAKlD,IAAMa,EAAgB,SAACC,GAAD,OAC3B,cAACrB,EAAD,aAAeG,KAAMmB,KAA4BD,KAGtCE,EAAc,SAACF,GAAD,OACzB,cAACrB,EAAD,aAAeG,KAAMqB,KAAqBH,KAG/BI,EAAa,SAACJ,GAAD,OACxB,cAACrB,EAAD,aAAeG,KAAMuB,KAAoBL,KAG9BM,EAAkB,SAACN,GAAU,MAIEb,oBAAS,GAJX,mBAIjCoB,EAJiC,KAIlBC,EAJkB,KAuBlCC,EACJT,EAAM7G,SAAWoH,EAAgBG,IAAoBC,IACvD,OACE,cAAChC,EAAD,yBACEG,KAAM2B,GACFT,GAFN,IAGEhB,QAxBY,WACVgB,EAAM7G,SACRqH,GAAiB,GAEnBR,EAAMhB,WAqBJC,UAbc,WACZsB,GACFC,GAAiB,GAEnBR,EAAMf,aAUJF,SApBa,WACXwB,GACFC,GAAiB,GAEnBR,EAAMjB,gBClFG6B,EAAa,U,gBC2DbC,EAAQC,sBAAwB,CAE3CC,WAAY,KACZC,aAAc,SACdC,iBAAkB,GAClBC,SAAS,EACTC,SAAS,EACTC,QAAQ,EACRC,OAAQ,KACRC,aAAc,CAAEC,MAAO,CAAEC,kBAAkB,EAAMC,iBAAiB,IAClEC,iBAAkB,KAClBC,OAAQ,GACRC,MAAO,KAEPC,cAAeC,kBAAO,SAACC,EAAOC,GAC5BD,EAAMhB,WAAaiB,KAErBC,gBAAiBH,kBAAO,SAACC,EAAOC,GAC9BD,EAAMf,aAAegB,KAEvBE,oBAAqBJ,kBAAO,SAACC,EAAOC,GAClCD,EAAMd,iBAAmBe,KAE3BG,WAAYL,kBAAO,SAACC,EAAOC,GACzBD,EAAMb,QAAUc,KAElBI,UAAWN,kBAAO,SAACC,EAAOC,GACxBD,EAAMV,OAASW,KAEjBK,WAAYP,kBAAO,SAACC,EAAOC,GACzBD,EAAMZ,QAAUa,KAElBM,UAAWR,kBAAO,SAACC,EAAOC,GACxBD,EAAMX,OAASY,KAEjBO,oBAAqBT,kBAAO,SAACC,EAAOC,GAClCD,EAAML,iBAAmBM,KAE3BQ,SAAUV,kBAAO,SAACC,EAAOC,GACvBD,EAAMH,MAAQI,KAEhBS,yBAA0BC,iBAAM,SAACC,EAASX,EAAV,GAAoC,EAAfY,cAG9B5J,KADAe,OAAO8I,cAAgB9I,OAAO+I,sBAGjDH,EAAQH,SAAS,iBACjBO,QAAQnB,MAAM,yDAGlBoB,iBAAkBN,gBAAK,uCAAC,WAAOC,EAASX,EAAhB,wBAAAiB,EAAA,6DAA2BL,EAA3B,EAA2BA,SAC3Cb,EAAQa,IACRM,EAAUnB,EAAMT,aAEtBqB,EAAQN,YAAW,GAJG,kBAMCc,UAAUC,aAAaC,aAAaH,GANrC,OAMd7B,EANc,OAOpBsB,EAAQP,UAAUf,GAClBsB,EAAQN,YAAW,GACnBM,EAAQL,WAAU,GATE,kDAWpBK,EAAQH,SAAS,cACjBO,QAAQnB,MAAR,MACAe,EAAQP,UAAU,MAClBO,EAAQN,YAAW,GACnBM,EAAQL,WAAU,GAfE,0DAAD,2DAkBvBgB,WAAYZ,gBAAK,uCAAC,WAAOC,EAASX,EAAhB,wBAAAiB,EAAA,sDAGhB,GAH2CL,EAA3B,EAA2BA,SACrCvB,EAASuB,IAAWvB,OAEd,CAAC,EAAD,YACUA,EAAOkC,aADjB,IACV,2BAAwC,QAChCC,OAFE,+BAMZb,EAAQP,UAAU,MAClBO,EAAQN,YAAW,GACnBM,EAAQL,WAAU,GAXF,2CAAD,2DAajBmB,iBAAkBf,gBAAK,uCAAC,WAAOC,GAAP,mBAAAM,EAAA,6DAChBS,EAAS,IAAIC,OAAJ,UACVC,OADU,+BAITC,EAAY,IAAIC,IAAgB,CAAEJ,WALlB,kBAQKK,YAAgBF,EAAW,GAAI,EAAG,KARvC,OAQdG,EARc,OASpBrB,EAAQJ,oBAAoByB,GATR,gDAWpBrB,EAAQH,SAAS,UACjBO,QAAQnB,MAAM,8BAAd,MACAe,EAAQJ,oBAAoB,MAbR,yDAAD,uDAiBvB0B,eAAgBnC,kBAAO,SAACC,EAAOC,GAC7BD,EAAMJ,OAAOlE,MAAQuE,OAKnBkC,EAAaC,6BAENC,EAAkBF,EAAWE,gBAE7BC,GADmBH,EAAWI,iBACdJ,EAAWG,eCoBzBE,MArJf,YAAwD,IAA9BC,EAA6B,EAA7BA,KAAM5G,EAAuB,EAAvBA,QACxB6G,EAAeC,mBADgC,EAEvBvF,oBAAS,GAFc,mBAE9ChG,EAF8C,KAErCwL,EAFqC,KAI/CC,EAAcC,uBAAY,WAC9B,GAAKJ,EAAaK,QAAlB,CAIA,GAAIN,GAAQA,EAAO,EAAG,CACpB,IAAM3J,GAAO,IAAIyB,MAAOC,UACxBkI,EAAaK,QAAQC,cAAc,CACjC/N,UAAWwN,EACX5G,QAASA,GAAW,EACpB/C,SAGJ4J,EAAaK,QAAQlK,QAAO,MAC3B,CAACgD,EAAS4G,IAETA,GAAQA,EAAO,GACjBQ,uBAAsB,SAACnK,GAAD,OAAU+J,EAAY/J,MA5CtB,SAACxB,GACzB,IAAM4L,EAAaP,mBAEnBQ,qBAAU,WAQR,OAFAD,EAAWH,QAAUE,uBALL,SAAVG,EAAWtK,GACfxB,EAASwB,GACToK,EAAWH,QAAUE,sBAAsBG,MAKtC,WACLC,qBAAqBH,EAAWH,YAGjC,IAkCHO,CAAkBT,GAElBM,qBAAU,WACR,IAAMI,EAAW,WACXb,EAAaK,SACfL,EAAaK,QAAQ1L,UAIzB,OADAW,OAAOwL,iBAAiB,SAAUD,GAC3B,kBAAMvL,OAAOyL,oBAAoB,SAAUF,MACjD,IAEH,IAAM7H,EAAQ4G,GAAc,SAACtC,GAAD,OAAWA,EAAMJ,OAAOlE,SAC9CgI,EAAWhI,GAASA,EAAMA,OAASA,EAAMA,MAAMjE,OACrD0L,qBAAU,WACJT,EAAaK,SAAWrH,GAASA,EAAMA,OACzCgH,EAAaK,QAAQb,eAAexG,EAAMA,SAE3C,CAACA,IA5CiD,MA8ClB2G,GAAgB,SAACzB,GAAD,OAAaA,KAAxDW,EA9C6C,EA8C7CA,WAAYnB,EA9CiC,EA8CjCA,WAGduD,EAAW9E,EACX+E,EAAkB,UAElBC,EAAef,uBACnB,SAACgB,GACKA,IAAYpB,EAAaK,UAC3BL,EAAaK,QAAU,IAAIvN,EAAasO,EAAS,KACjDpB,EAAaK,QAAQgB,mBAAmBlF,GACpCnD,GACFgH,EAAaK,QAAQb,eAAexG,GAEtCgH,EAAaK,QAAQiB,cAGzB,CAACtI,IAGHyH,qBAAU,WACR,GAAIT,EAAaK,QACf,OAAOL,EAAaK,QAAQkB,uBAAsB,SAAC9J,GAAD,OAChDyI,EAAWzI,QAGd,IAEH,IAAM+J,EAAM,uCAAG,sBAAAhD,EAAA,6DACbd,GAAW,GADE,SAEPmB,IAFO,OAGbP,QAAQ3L,IAAI,kBAHC,2CAAH,qDAQN8O,EACJ,eAACC,EAAA,EAAD,CAASC,GAAG,qBAAqBvH,UAAU,eAA3C,UACE,cAACsH,EAAA,EAAQE,MAAT,CAAeC,GAAG,KAAlB,SAJmB,eAKnB,cAACH,EAAA,EAAQI,QAAT,UAJkB,+CAQtB,OACE,eAAC,IAAMC,SAAP,WACE,qBAAK3H,UAAU,oBAAoB4H,IAAKb,IACxC,qBAAK/G,UAAU,8BACf,eAAC6H,EAAA,EAAD,CACEC,MAAM,SACNC,GAAG,OACH/H,UAAU,sCAHZ,UAKG4G,GACC,cAACoB,EAAA,EAAD,CACEC,KAAM3N,EACN4N,UAAU,MACVC,QAASd,EAHX,SAKE,cAAC,EAAD,CACElH,QAAS,kBAAMyF,EAAaK,QAAQmC,mBACpChI,UAAW,kBAAMwF,EAAaK,QAAQiB,YACtChH,SAAU,kBAAM0F,EAAaK,QAAQiB,YACrClH,UAAU,iBACVK,KA7DI,GA8DJlC,MAAO0I,EACP9G,aAAc+G,EACdxM,QAASA,MAIdsM,GACC,cAAC,EAAD,CACEzG,QAAS,kBAAMyF,EAAaK,QAAQoC,aACpCjI,UAAW,kBAAMwF,EAAaK,QAAQiB,YACtChH,SAAU,kBAAM0F,EAAaK,QAAQiB,YACrClH,UAAU,YACVK,KA1EM,GA2ENlC,MAAO0I,EACP9G,aAAc+G,IAGlB,cAAC,EAAD,CACE1G,UAAWgH,EACXpH,UAAU,WACVK,KAlFQ,GAmFRlC,MAAO0I,EACP9G,aAAc+G,IAEfF,GACC,cAAC,EAAD,CACEzG,QAAS,kBAAMyF,EAAaK,QAAQqC,mBACpClI,UAAW,kBAAMwF,EAAaK,QAAQiB,YACtClH,UAAU,cACVK,KA3FM,GA4FNlC,MAAO0I,EACP9G,aAAc+G,WC3JpByB,EAA2B,SAACC,EAASC,GACzC,IAAK,IAAI/N,EAAI,EAAGA,EAAI8N,EAAQ7N,OAAQD,IAClC+N,EAAS/N,GAAK8N,EAAQ9N,GAAK,IAAM,GAwB9B,SAASgO,EAAT,GASS,IARdlG,EAQa,EARbA,OACAL,EAOa,EAPbA,aACAU,EAMa,EANbA,iBACAX,EAKa,EALbA,WACAyG,EAIa,EAJbA,eACAvG,EAGa,EAHbA,iBACAC,EAEa,EAFbA,QACAuG,EACa,EADbA,cACa,EACWC,IAAMvI,SAAwB,MADzC,mBACNqF,EADM,KACAmD,EADA,OAEiBD,IAAMvI,SAAwB,MAF/C,mBAENvB,EAFM,KAEGgK,EAFH,KAGPC,EAAaH,IAAMhD,QAAO,GAC1BoD,EAAgBJ,IAAMhD,OAAmB,IAGzCqD,EAAkBL,IAAM7C,YAAN,sBAAkB,8BAAA5B,EAAA,sEAClCvB,EACHsG,eACAC,KAAK,iBAAkBjH,EAAcD,EAAYA,EAAa,GAHzB,QAIlCmH,EAAaJ,EAAchD,SACtBqD,OAAS,IAAIC,aAAarH,GAErCmH,EAAWG,aAAe,IAAKtO,OAAO8I,cACpC9I,OAAO+I,oBAEHwF,EAAoBJ,EAAWG,aAAaE,wBAChDlH,GAGF6G,EAAWM,SAAWN,EAAWG,aAAaI,sBACKzP,IAA/CkP,EAAWM,SAASE,yBAEtBR,EAAWS,WAAa,IAAIC,WAAW7H,IAEzCmH,EAAWM,SAASK,QAAU9H,EAC9BuH,EAAkBQ,QAAQZ,EAAWM,UApBG,4CAqBvC,CAACV,EAAe/G,EAAYC,EAAcK,EAAQK,IAG/CkD,EAAc8C,IAAM7C,YAAN,sBAAkB,0CAAA5B,EAAA,yDAC/B4E,EAAW/C,QADoB,oBAElC+C,EAAW/C,SAAU,EAEfoD,EAAaJ,EAAchD,QACzB0D,EAA+CN,EAA/CM,SAAUL,EAAqCD,EAArCC,OAAQQ,EAA6BT,EAA7BS,WAAYN,EAAiBH,EAAjBG,aACjCG,GAAaL,GAAWE,EANK,uBAOhCtF,QAAQgG,KACN,2EAR8B,sCAYM/P,IAApCwP,EAASE,uBACXF,EAASE,uBAAuBP,IAIhCK,EAASQ,sBAAsBL,GAC/BvB,EAAyBuB,EAAYR,IAlBL,UAoBbzG,EAClBsG,eACAC,KACC,WACAE,EACAE,EAAaY,WACbzB,EACAvG,GA3B8B,QAoB5BiI,EApB4B,OA6B5BlS,EAAYkS,EAAO,GACnBtL,EAAUsL,EAAO,GACnBlS,EAAY,GACd2Q,EAAQ3Q,GACR4Q,EAAWhK,KAEX+J,EAAQ,MACRC,EAAW,OAGbC,EAAW/C,SAAU,EAvCa,4CAyCnC,CACD+C,EACAC,EACAH,EACAC,EACAJ,EACAvG,EACAS,IAMFgG,IAAMxC,WAAU,WACd,GAAKhE,EAAL,CAMA6B,QAAQ3L,IAAI,8BACZ,IAAM+R,EAAS,CAAEC,cAAc,GAa/B,OALA,sBAAC,sBAAAnG,EAAA,sEACO8E,IADP,OAECsB,IAFD,0CAAD,GAKO,WACLtG,QAAQ3L,IAAI,8BACZ+R,EAAOC,cAAe,GAdxB,SAASC,IACHF,EAAOC,eAGXpE,sBAAsBqE,GACtBzE,QAWD,CAACmD,EAAiBnD,EAAa1D,IAElC,IAAMoI,EAAgB7B,EACtB,OAAO,cAAC6B,EAAD,CAAe9E,KAAMA,EAAM5G,QAASA,I,6BC3JtC,SAAS2L,EAAT,GAAgE,IAA5CC,EAA2C,EAA3CA,SACjBvF,EAAmBG,GAAgB,SAACzB,GAAD,OAAaA,KAAhDsB,eAQR,OAPAiB,qBAAU,WACR,IAAMzH,EAdc,WACtB,IAAMgM,EAASC,IAAGC,MAAM5P,OAAO6P,SAASC,OAAOC,OAAO,IACtD,GAAIL,EAAOM,GACT,IACE,OAAOC,YAASP,EAAOM,IACvB,MAAOnI,GACPqI,MAAMrI,EAAMsI,aAQAC,GACV1M,GACFwG,EAAexG,KAEhB,CAACwG,IAGF,cAAC,IAAMuC,SAAP,UACE,qBAAK3H,UAAU,iBAAf,SAAiC2K,M,uDCvBxB,SAASY,IACtB,OACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,qCACA,yDACA,wMAKA,iIAIA,4DACA,mPAMA,oEACA,iMAKA,qDACA,mLAKA,+DACA,qEACA,wCACA,4BACE,mBACEC,KAAK,kCACLC,OAAO,SACPC,IAAI,aAHN,sD,iCC1CNC,GAAM,0CAEL,SAAeC,GAAtB,mC,8CAAO,WAA2BC,GAA3B,mBAAA5H,EAAA,6DACC6H,EADD,UACUH,IADV,OACgBI,mBAAmBF,IADnC,SAEkBG,MAAMF,GAFxB,YAECG,EAFD,QAGQC,GAHR,iCAIoBD,EAASE,OAJ7B,cAIGC,EAJH,yBAKIA,GALJ,eAOHrI,QAAQnB,MAAM,+BAAgCqJ,GAP3C,uBAQIjS,GARJ,6C,sBCDA,SAASqS,GAAkBC,GAChC,IAAIC,EACAC,EAEAC,EAAM,EACJhO,EAAQ,GACRiO,EAAQJ,EAAKK,MAAM,MAEzB,SAASC,EAAOC,GACdN,EAAMM,EACNL,EAAe,IAAQK,EAAQ,EAKjC,SAASC,EAAYC,GACnB,IAAMC,EAAQD,EAAKjC,OAAO,GAAG6B,MAAM,KAC7BM,EAAMD,EAAM,GAAGE,cACfL,EAAQG,EAAM,GACpB,GAAY,QAARC,EAEFL,EADiBO,WAAWN,EAAMO,QAAQ,IAAK,KAAM,UAEhD,GAAY,QAARH,EACTR,EAAMU,WAAWN,EAAMO,QAAQ,IAAK,KAAM,SACrC,GAAY,aAARH,EACT,MAAM,IAAII,MAAM,iCAIpB,SAASC,EAAUP,GACjB,IAAMC,EAAQD,EAAKjC,OAAO,GAAG6B,MAAM,KACnC,GAAIK,EAAMxS,OAAS,EAAG,CACpB,IAAMwB,EAAQyQ,EAAMc,SAASP,EAAM,GAAI,IAAMR,EACvCtQ,EAAWqR,SAASP,EAAM,GAAI,IAAMR,EACpC7P,EAAQ4Q,SAASP,EAAM,GAAI,IAE3BQ,EAAatV,KAAKC,MAAM6D,GAG9B,GAAIyC,EAAMjE,OAAS,EAAG,CACpB,IAAMyB,EAAWwC,EAAMA,EAAMjE,OAAS,GAClCyB,EAASD,MAAQC,EAASC,UAAYsR,IACxCvR,EAASC,SAAWsR,EAAavR,EAASD,OAI9CyC,EAAMnE,KAAK,CACT0B,MAAOwR,EACPtR,SAAUhE,KAAKC,MAAM+D,GACrBS,MAAOA,KApCbiQ,EAAO,KA2CP,IADA,IAAIa,EAAU,SACLlT,EAAI,EAAGA,EAAImS,EAAMlS,OAAQD,IAAK,CACrC,IAAMwS,EAAOL,EAAMnS,GACH,WAAZkT,IACEV,EAAKW,WAAW,MAClBD,EAAU,QACDV,EAAKW,WAAW,MACzBZ,EAAYC,IAGA,UAAZU,IAEAV,EAAKW,WAAW,OAChBX,EAAKW,WAAW,OAChBX,EAAKW,WAAW,QAGhBJ,EAAUP,GAKhB,MAAO,CACLR,IAAKA,EACLE,IAAKA,EACLhO,MAAOA,G,OCzEX,SAASkP,GAAT,GAAmC,IAAfC,EAAc,EAAdA,WAAc,EACNzN,mBAAS,IADH,mBACzB0N,EADyB,KAClBC,EADkB,OAEJ3N,mBAAS,IAFL,mBAEzB4N,EAFyB,KAEjBC,EAFiB,OAGE7N,mBAAS,IAHX,mBAGzB8N,EAHyB,KAGdC,EAHc,OAII/N,mBAAS,IAJb,mBAIzBgO,EAJyB,KAIbC,EAJa,OAKRjO,qBALQ,mBAKzBkO,EALyB,KAKnBC,EALmB,OAMEnO,qBANF,mBAMzBoO,EANyB,KAMdC,EANc,OAOIrO,oBAAS,GAPb,mBAOzBsO,EAPyB,KAObC,EAPa,OAQAvO,oBAAS,GART,mBAQzBwO,EARyB,KAQfC,EARe,OASEzO,qBATF,mBASzB0O,EATyB,KASdC,EATc,KAW1BC,EAAW,uCAAG,WAAOtE,GAAP,mBAAAxG,EAAA,yDACZ+K,EAAUjU,OAAO6P,SAASY,KAAKmB,MAAM,KAAK,GAC5CsC,EAAcvE,IAAGwE,UAAH,aAChBrB,MAAOA,QAAgB7T,EACvB+T,OAAQA,QAAkB/T,EAC1BmV,MAAOlB,QAAwBjU,EAC/BoV,OAAQjB,QAA0BnU,GAC/ByQ,IAEDqB,EATc,UASLkD,EATK,YASMC,IACpBrB,EAVc,oBAWZa,EAXY,gCAYF7C,GAAYE,GAZV,OAYdA,EAZc,cAchB8B,EAAW9B,GAdK,2CAAH,sDAkBXuD,EAAa,uCAAG,WAAO/C,EAAMgD,GAAb,iBAAArL,EAAA,oEAEZsL,EAASlD,GAAkBC,MACnBiD,EAAO9Q,MAAMjE,OAHT,qBAIZ8U,EAAKE,gBAJO,uBAKRC,EAAUC,YAASH,GALX,SAMRR,EAAY,CAAEhE,GAAI0E,IANV,OAQhBjB,GAAa,GARG,wBAWhBM,EAAa,WAXG,0DAclB/K,QAAQnB,MAAR,MAdkB,QAgBpBgM,GAAY,GAhBQ,0DAAH,wDAmDnB,OACE,eAACe,EAAA,EAAD,CAAMC,YAAU,EAACrB,UAAWA,EAAWsB,SAxBpB,SAACC,GACpBA,EAAMC,iBACND,EAAME,kBACN,IAAMV,EAAOQ,EAAMG,cACf5B,EAbQ,SAACiB,GACbV,GAAY,GACZ,IAAMsB,EAAS,IAAIC,WACnBD,EAAO3J,iBAAiB,QAAQ,SAAC6J,GAC/Bf,EAAca,EAAOhG,OAAQoF,MAE/BY,EAAOG,WAAWhC,GAQhBrS,CAAMsT,GAENR,EAAa,YAiBf,UACE,eAACa,EAAA,EAAKW,MAAN,WACE,cAACX,EAAA,EAAKY,MAAN,yBACA,cAACZ,EAAA,EAAKa,QAAN,CACEC,UAAQ,EACRC,KAAK,OACLC,YAAY,aACZ9D,MAAOgB,EACP+C,UAAU,KACVC,SAAU,SAACC,GAAD,OAAShD,EAASgD,EAAIrF,OAAOoB,aAG3C,eAAC8C,EAAA,EAAKW,MAAN,CAAYS,UAAU,oBAAtB,UACE,eAACpB,EAAA,EAAKqB,KAAN,CAAW5J,GAAG,cAAc6J,QAAM,EAAlC,UACE,cAACtB,EAAA,EAAKqB,KAAKE,MAAX,CACEC,OAAO,OACPC,YAAavC,EACbgC,SA9Be,SAACC,GACpBA,EAAIrF,OAAO4F,MAAM7W,OAAS,EAE5B8T,EAAQwC,EAAIrF,OAAO4F,MAAM,IAEzB/C,OAAQtU,GAGV8U,IACAN,GAAa,IAsBLiC,UAAQ,IAEV,cAACd,EAAA,EAAKqB,KAAKT,MAAX,iCACA,cAACZ,EAAA,EAAKa,QAAQc,SAAd,CAAuBZ,KAAK,UAA5B,iGAKF,cAACf,EAAA,EAAK4B,KAAN,CAAW1R,UAAU,aAArB,qDAGCgP,GACC,qBAAKhP,UAAU,mBAAf,wHAMJ,eAAC8P,EAAA,EAAKW,MAAN,WACE,cAACX,EAAA,EAAKY,MAAN,2BACA,cAACZ,EAAA,EAAKa,QAAN,CACEE,KAAK,OACLC,YAAY,4BACZ9D,MAAOoB,EACP4C,SAAU,SAACC,GAAD,OAAS5C,EAAa4C,EAAIrF,OAAOoB,UAE7C,cAAC8C,EAAA,EAAK4B,KAAN,CAAW1R,UAAU,aAArB,kEAIF,eAAC8P,EAAA,EAAKW,MAAN,WACE,cAACX,EAAA,EAAKY,MAAN,6BACA,cAACZ,EAAA,EAAKa,QAAN,CACEE,KAAK,OACLC,YAAY,+BACZ9D,MAAOsB,EACP0C,SAAU,SAACC,GAAD,OAAS1C,EAAc0C,EAAIrF,OAAOoB,UAE9C,cAAC8C,EAAA,EAAK4B,KAAN,CAAW1R,UAAU,aAArB,kDAIF,eAAC8P,EAAA,EAAKW,MAAN,WACE,cAACX,EAAA,EAAKY,MAAN,0BACA,cAACZ,EAAA,EAAKa,QAAN,CACEE,KAAK,OACLC,YAAY,0BACZ9D,MAAOkB,EACP6C,UAAU,KACVC,SAAU,SAACC,GAAD,OAAS9C,EAAU8C,EAAIrF,OAAOoB,UAE1C,cAAC8C,EAAA,EAAK4B,KAAN,CAAW1R,UAAU,aAArB,sFAIF,cAAC8P,EAAA,EAAKW,MAAN,CAAYS,UAAU,cAAtB,SACE,cAACpB,EAAA,EAAK6B,MAAN,CACEd,KAAK,SACLtJ,GAAG,qBACHqK,MAAM,4BACNC,QAASjD,EACToC,SAAU,kBAAMnC,GAAeD,QAGnC,cAACkB,EAAA,EAAKW,MAAN,UACE,cAACqB,GAAA,EAAD,CAAQjB,KAAK,SAASkB,QAAQ,YAAYC,SAAUlD,EAApD,SACGA,EAAW,cAAgB,qBAOtC,SAASmD,GAAT,GAA8B,IAARhG,EAAO,EAAPA,IAAO,EACC3L,oBAAS,GADV,mBACpB4R,EADoB,KACZC,EADY,KAErBC,EAAM,uCAAG,sBAAAhO,EAAA,sEACPE,UAAU+N,UAAUC,UAAUrG,GADvB,OAEbkG,GAAU,GAFG,2CAAH,qDAINI,EAAML,EAAS,UAAY,OACjC,OACE,cAACJ,GAAA,EAAD,CAAQU,QAASJ,EAAQL,QAAQ,YAAjC,SACGQ,IAKP,SAASE,GAAT,GAA0B,IAARxG,EAAO,EAAPA,IAChB,OAAKA,EAIH,qCACE,cAACR,EAAA,EAAD,CAAKzL,UAAU,YAAf,SACE,cAAC0L,EAAA,EAAD,UACE,qBAAK1L,UAAU,0BAAf,mBAGJ,cAACyL,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACgH,GAAA,EAAD,CAAMC,MAAI,EAAV,UACE,oDADF,gDAGE,uBACA,sBAAM3S,UAAU,eAAhB,SAAgCiM,IAChC,qBAAKjM,UAAU,cAAf,SACE,cAACiS,GAAD,CAAYhG,IAAKA,gBAjBpB,KA0BI,SAAS2G,KAAY,IAAD,EACXtS,qBADW,mBAC1B2L,EAD0B,KACrB4G,EADqB,KAGjC,OACE,eAACrH,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKzL,UAAU,OAAf,SACE,eAAC0L,EAAA,EAAD,WACE,qBAAK1L,UAAU,0BAAf,eADF,kBAEiB,4EAFjB,wFAKE,qBAAIA,UAAU,OAAd,UACE,uDACA,qDACA,sDARJ,yCAaF,cAACyL,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,qBAAK1L,UAAU,0BAAf,mBAGJ,cAAC8N,GAAD,CAAUC,WAAY,SAACf,GAAD,OAAW6F,EAAO7F,MACxC,cAACyF,GAAD,CAAQxG,IAAKA,O,4CCtPJ,SAAS6G,GAAT,GAA+C,IAAzB/P,EAAwB,EAAxBA,MAAOkF,EAAiB,EAAjBA,KAAM8K,EAAW,EAAXA,QAC5CR,EAAM,+DAoBV,MAnBc,eAAVxP,EACFwP,EACE,+EAEE,+BACE,6EACA,iFACA,yDAIa,kBAAVxP,IACTwP,EACE,iIAOF,eAACS,GAAA,EAAD,CAAO/K,KAAMA,EAAMgL,OAAQF,EAASG,SAAS,SAASC,UAAU,EAAhE,UACE,cAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,GAAA,EAAMxL,MAAP,mCAEF,cAACwL,GAAA,EAAMM,KAAP,UAAaf,IACb,cAACS,GAAA,EAAMO,OAAP,UACE,cAACzB,GAAA,EAAD,CAAQC,QAAQ,YAAYS,QAASO,EAArC,qBCtBR,SAASS,KAAe,IAAD,EACOlT,oBAAS,GADhB,mBACdmT,EADc,KACNC,EADM,OAEoBnO,GACvC,SAACzB,GAAD,OAAaA,KADPK,EAFa,EAEbA,iBAAkBb,EAFL,EAEKA,WAO1B+C,qBAAU,WACR,IAAM+L,EAASuB,YAAW,kBAAMD,GAAU,KAAO,KACjD,OAAO,kBAAME,aAAaxB,MACzB,IAEH,IAAMjW,EAAK,uCAAG,sBAAAiI,EAAA,sEACND,IADM,OAEZb,GAAW,GACXY,QAAQ3L,IAAI,sBAHA,2CAAH,qDAQX,OACE,cAACuZ,GAAA,EAAD,CACE9R,UAAU,YACV+R,QAAQ,UACRS,QAASrW,EACT6V,UAAWyB,EAJb,SAME,sBAAKzT,UAAU,oBAAf,UACE,qBAAKA,UAAU,iBAAf,SAVO,UAWP,cAAC,KAAD,CAAgBK,KAAM,GAAIlC,MAAM,eAMxC,SAAS0V,GAAT,GAAyC,IAAjBC,EAAgB,EAAhBA,KAAMlI,EAAU,EAAVA,OAC5B,OACE,mBAAGD,KAAMmI,EAAMlI,OAAQA,GAAkB,SAAUC,IAAI,aAAvD,SACGiI,IAKP,SAASC,KACP,IAAMnJ,EAASC,IAAGC,MAAM5P,OAAO6P,SAASC,OAAOC,OAAO,IAC9CiD,EAAiCtD,EAAjCsD,OAAQqB,EAAyB3E,EAAzB2E,OAAQD,EAAiB1E,EAAjB0E,MAAOtB,EAAUpD,EAAVoD,MAE/B,IADcxI,GAAc,SAACtC,GAAD,OAAWA,EAAMJ,OAAOlE,SAElD,OAAO,KAKT,IAAMoV,EAAWhG,EAAK,UAAMA,EAAN,yBAA2B7T,EACjD,OACE,sBAAK6F,UAAU,YAAf,UACGgU,GACC,eAAC,KAAD,CAAUzM,GAAIyG,EAAMT,QAAQ,UAAW,KAAvC,UACE,gCAAQyG,IACR,sBAAMC,SAAS,WAAWC,QAASF,OAGvC,eAACxI,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,8DAGJ,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKyI,GAAI,EAAT,SACE,sBAAKnU,UAAU,oBAAf,UACE,8BACE,iCAASgO,GAAgB,eAE1BE,GAAU,8BAAMA,IAChBoB,GACC,0CACS,cAACuE,GAAD,CAAcC,KAAMxE,EAAO1D,OAAO,mBAG5C2D,GACC,2CACU,cAACsE,GAAD,CAAcC,KAAMvE,EAAQ3D,OAAO,yBAKnD,eAACF,EAAA,EAAD,CAAKyI,GAAI,EAAT,UACE,0CACA,+BACE,sDACC7E,GAAS,uEACV,4CACY,2CADZ,qDAWC,SAAS8E,KACtB,IAAMrR,EAAQyC,GAAc,SAACtC,GAAD,OAAWA,EAAMH,SACrCY,EAAa4B,GAAgB,SAACzB,GAAD,OAAaA,KAA1CH,SACR,OACE,qCACE,cAACoQ,GAAD,IACA,cAACvI,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAK1L,UAAU,cAAf,SACE,cAACwT,GAAD,UAIN,cAACV,GAAD,CAAY7K,OAAQlF,EAAOgQ,QAAS,kBAAMpP,EAAS,OAAOZ,MAAOA,OCxHvE,SAASqQ,KACP,OACE,sBAAKpT,UAAU,UAAf,UACE,0CACA,+DAKN,SAASqU,KACP,OACE,eAACC,EAAA,EAAI9I,UAAL,CAAejE,GAAG,gBAAgBgN,iBAAiB,OAAnD,UACE,eAACC,EAAA,EAAD,CAAKzC,QAAQ,QAAb,UACE,cAACyC,EAAA,EAAIC,KAAL,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUC,SAAS,OAAnB,oBAEF,cAACH,EAAA,EAAIC,KAAL,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUC,SAAS,SAAnB,sBAEF,cAACH,EAAA,EAAIC,KAAL,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUC,SAAS,OAAnB,SACE,8CAIN,eAACL,EAAA,EAAI5M,QAAL,WACE,cAAC4M,EAAA,EAAIM,KAAL,CAAUD,SAAS,OAAnB,SACE,cAACP,GAAD,MAEF,cAACE,EAAA,EAAIM,KAAL,CAAUD,SAAS,SAAnB,SACE,cAAC/B,GAAD,MAEF,cAAC0B,EAAA,EAAIM,KAAL,CAAUD,SAAS,OAAnB,SACE,cAACpJ,EAAD,YAOK,SAASsJ,KACtB,OACE,qCACE,cAACzB,GAAD,IACA,cAACiB,GAAD,OCISS,OA/Cf,WACE,IAEM3S,EAAeqD,GAAc,SAACtC,GAAD,OAAWA,EAAMf,gBAC9CD,EAAasD,GAAc,SAACtC,GAAD,OAAWA,EAAMhB,cAC5CE,EAAmBoD,GAAc,SAACtC,GAAD,OAAWA,EAAMd,oBAClDC,EAAUmD,GAAc,SAACtC,GAAD,OAAWA,EAAMb,WANlC,EAQgCmD,GAAc,SAACtC,GAAD,MAAY,CACrEX,OAAQW,EAAMX,OACdD,QAASY,EAAMZ,QACfE,OAAQU,EAAMV,OACdK,iBAAkBK,EAAML,qBAJlBN,EARK,EAQLA,OAAQC,EARH,EAQGA,OAAQK,EARX,EAQWA,iBARX,EAe0C0C,GACrD,SAACzB,GAAD,OAAaA,KADPF,EAfK,EAeLA,yBAA0BgB,EAfrB,EAeqBA,iBAIlCiE,IAAMxC,WAAU,WACd,sBAAC,sBAAAjC,EAAA,sEACOQ,IADP,cAECV,QAAQ3L,IAAI,sBAFb,SAGOqL,IAHP,0CAAD,KAKC,CAACA,EAA0BgB,IAE9B,IAAImQ,EAAc,cAACF,GAAD,IAClB,GAAItS,GAAUC,GAAUK,EAAkB,CACxC,IAAM+F,EAAgBlD,EACtBqP,EACE,cAACrM,EAAD,CACElG,OAAQA,EACRL,aAAcA,EACdU,iBAAkBA,EAClBX,WAAYA,EACZyG,eAnCkB,IAoClBvG,iBAAkBA,EAClBC,QAASA,EACTuG,cAAeA,IAKrB,OAAO,cAAC8B,EAAD,UAAWqK,KCtCLC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCdQ,IAAS1Z,OACP,cAAC,IAAM2Z,WAAP,UACE,cAAC,gBAAD,CAAe1T,MAAOA,EAAtB,SACE,cAAC,GAAD,QAGJzI,SAASoc,eAAe,SAM1BX,M,iCCtBA,gFAmBA,IAAMY,EAAY,IAEZC,EACG,EADHA,EAEM,EAFNA,EAGG,EAGHC,EACG,GADHA,EAEM,EAFNA,EAGG,EAIT,SAASC,EAAY5Z,EAAOE,GAC1B,OAAOF,EAAQ,GAAK0Z,GAAoBxZ,EAAW,GAAKwZ,EAenD,SAAS1K,EAASsB,GACvB,IAAM7N,EAAQ,GACRoX,EANR,SAAsBvJ,GACpB,OAAOA,EAAKc,QAAQ,KAAM,KAAKA,QAAQ,MAAO,KAAKA,QAAQ,KAAM,KAKlD0I,CAAaxJ,GACtBnD,EAAS4M,EAAOC,KAAKH,EAAQ,UAEnC,GAAI1M,EAAO3O,OAAS,EAClB,MAAM,IAAI6S,MAAM,cAGlB,IAAI4I,EAAM,EACNC,EAAW,EAETC,EAAehN,EAAOiN,aAAaH,GACzCA,GAAO,EAGP,IAAMI,EAAOlN,EAAOiN,aAAaH,GACjCA,GAAO,EACPC,GAAYG,EAKZ,IAJA,IAAMC,EAAU,IAAIhZ,KAAY,MAAP+Y,GAGrBE,EAAU,EACPN,EAAM9M,EAAO3O,QAAQ,CAE1B,IACIgc,OAAK,EACLxa,OAAK,EACLE,OAAQ,EACRS,OAAK,EACT,GAL2C,IAA5BwM,EAAOsN,WAAWR,EAAK,GAK1B,CAEVO,EAAQ,EACR,IAAM3J,EAAQ1D,EAAOsN,WAAWR,EAAKO,GACrCxa,EACG6Q,GAAU8I,EAAqBA,GAC9B,GAAKA,GAAmB,EAC5BzZ,EAAY2Q,GAAS8I,GAAqB,GAAKA,GAAsB,EACrEhZ,EACEkQ,GAAU,GAAK8I,GAAmB,GAAO,GAAKA,GAAmB,EACnEO,GAAYrJ,MACP,CAEL2J,EAAQ,EACR,IAAM3J,EAAQ1D,EAAOsN,WAAWR,EAAKO,GACrCxa,EACG6Q,GAAU6I,EAAsBA,GAC/B,GAAKA,GAAoB,EAC7BxZ,EAAY2Q,GAAS6I,GAAsB,GAAKA,GAAuB,EACvE/Y,EACEkQ,GAAU,GAAK6I,GAAoB,GAAO,GAAKA,GAAoB,EACrEQ,GAAYrJ,EAGd,IAAM5U,EAAO,CACX+D,MAAOua,EAAUva,EAAQyZ,EACzBvZ,SAAUA,EAAWuZ,EACrB9Y,SAEF8B,EAAMnE,KAAKrC,GACXse,EAAUte,EAAK+D,MAAQ/D,EAAKiE,SAC5B+Z,GAAOO,EAIT,IAAgB,MAAXN,KAAsBC,EACzB,MAAM,IAAI9I,MAAM,oCAGlB,MAAO,CACLiJ,UACA7X,SAIG,SAASiR,EAASpD,GACvB,IAAMoK,EAAU,GACZC,EAAU,EACVT,EAAW,EAEf,SAASU,EAAU/J,EAAOgK,EAAWC,GAEnC,GAAIjK,GADS,GAAKgK,GAAa,EAE7B,MAAM,IAAIxJ,MAAJ,UACDwJ,EADC,sCACsChK,EADtC,2BAIR,OAAOA,GAASiK,GAGlB,WAEE,IAAMT,EAAOne,KAAKC,OAAM,IAAImF,MAAOC,UAAY,OACzCiZ,EAAQT,EAAOgB,MAAM,GAC3BP,EAAMQ,cAAcX,GACpBK,EAAQpc,KAAKkc,GACbN,GAAYG,EAGdY,GAEA,IAAK,IAAI1c,EAAI,EAAGA,EAAI+R,EAAK7N,MAAMjE,OAAQD,IAAK,CAC1C,IAAMtC,EAAOqU,EAAK7N,MAAMlE,GAClByB,EAAQ9D,KAAKC,OAAOF,EAAK+D,MAAQ2a,EAAUlB,GAAaA,GACxDvZ,EAAWhE,KAAKC,MAAMF,EAAKiE,SAAWuZ,GAC5CkB,GAAW3a,EAAQE,EACnB,IAAMS,EAAQ1E,EAAK0E,MAEnB,GAAIiZ,EAAY5Z,EAAOE,GAAW,CAEhC,IAAIgb,EAAMN,EACR5a,EACA0Z,EACAA,EAAsBA,GAExBwB,GAAON,EAAU1a,EAAUwZ,EAAqBA,GAChDwB,GAAON,EAAUja,EAAO+Y,EAAkB,GAC1C,IAAMc,EAAQT,EAAOgB,MAAM,GAC3BP,EAAMQ,cAAcE,GACpBR,EAAQpc,KAAKkc,GACbN,GAAYgB,MACP,CAEL,IAAIA,EAAM,GAAK,GACfA,GAAON,EACL5a,EACA2Z,EACAA,EAAqBA,GAEvBuB,GAAON,EAAU1a,EAAUyZ,EAAoBA,GAC/CuB,GAAON,EAAUja,EAAOgZ,EAAiB,GACzC,IAAMa,EAAQT,EAAOgB,MAAM,GAC3BP,EAAMW,YAAYD,EAAK,EAAG,GAC1BR,EAAQpc,KAAKkc,GACbN,GAAYgB,GAKhB,IAAME,EAAcrB,EAAOgB,MAAM,GAKjC,OAJAK,EAAYJ,cAAyB,MAAXd,GAC1BQ,EAAQW,QAAQD,GArJlB,SAAoB9K,GAClB,OAAOA,EAAKc,QAAQ,MAAO,KAAKA,QAAQ,MAAO,KAAKA,QAAQ,KAAM,KAuJ3DkK,CADQvB,EAAOwB,OAAOb,GAASxL,SAAS,c","file":"static/js/main.1067ceef.chunk.js","sourcesContent":["// Notes start normally from C but we start from F note by using offset.\nexport const NOTE_OFFSET = 7;\nexport const NOTE_STRINGS = [\n    'F',\n    'F♯',\n    'G',\n    'G♯',\n    'A',\n    'A♯',\n    'B',\n    'C',\n    'C♯',\n    'D',\n    'D♯',\n    'E',\n];\nexport const OCTAVE_COLORS = [\n    [121, 85, 72],\n    [158, 158, 158],\n    [96, 125, 139],\n    [76, 175, 80],\n    [244, 67, 54],\n    [33, 150, 243],\n    [0, 150, 136],\n    [255, 235, 59],\n    [0, 188, 212],\n];\n","import { OCTAVE_COLORS } from '../constants';\nexport function noteFromPitch(frequency) {\n    let noteNum = 12 * (Math.log(frequency / 440) / Math.log(2));\n    return Math.round(noteNum) + 69;\n}\nexport function frequencyFromNoteNumber(note) {\n    return 440 * Math.pow(2, (note - 69) / 12);\n}\nexport function centsOffFromPitch(frequency, note) {\n    return Math.floor((1200 * Math.log(frequency / frequencyFromNoteNumber(note))) / Math.log(2));\n}\nexport function colorFromNote(note) {\n    let octave = Math.floor(note / 12) - 1;\n    let idx = Math.min(octave, OCTAVE_COLORS.length - 1);\n    idx = Math.max(0, idx);\n    return OCTAVE_COLORS[idx];\n}\n","import { scaleLinear } from 'd3-scale';\nimport { NOTE_OFFSET, NOTE_STRINGS } from '../constants';\nimport { noteFromPitch, centsOffFromPitch } from '../utils';\nclass PitchDisplay {\n    constructor(container, timeSpan = 15000) {\n        this.frequencies = [];\n        this.melodyNotes = [];\n        this.introStateListeners = [];\n        this.background = '#efefef';\n        this.highlight = '#888888';\n        this.container = container;\n        this.container.style.position = 'relative';\n        const canvasStyle = 'position: absolute; width: 100%; height: 100%;';\n        this.bgCanvas = document.createElement('canvas');\n        this.bgCanvas.setAttribute('style', canvasStyle);\n        this.bgContext = this.bgCanvas.getContext('2d');\n        this.melodyCanvas = document.createElement('canvas');\n        this.melodyCanvas.setAttribute('style', canvasStyle);\n        this.melodyContext = this.melodyCanvas.getContext('2d');\n        this.noteCanvas = document.createElement('canvas');\n        this.noteCanvas.setAttribute('style', canvasStyle);\n        this.noteContext = this.noteCanvas.getContext('2d');\n        this.container.appendChild(this.bgCanvas);\n        this.container.appendChild(this.melodyCanvas);\n        this.container.appendChild(this.noteCanvas);\n        this.timeSpan = timeSpan;\n        this.lastSongPos = 0;\n        this.speedChanged = undefined;\n        this.playingSpeed = 0;\n        this.melodyStart = 0;\n        this.inIntro = false;\n        this.resize();\n    }\n    subscribeToIntroState(callback) {\n        this.introStateListeners.push(callback);\n        return () => {\n            // unsubscribe function\n            for (let i = 0; i < this.introStateListeners.length; i++) {\n                if (this.introStateListeners[i] === callback) {\n                    this.introStateListeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n    }\n    resize() {\n        let w = this.container.clientWidth;\n        let h = this.container.clientHeight;\n        // If device pixel ratio > 1 like in Retina display, canvas content\n        // looks blurry if not scaled\n        const dpr = window.devicePixelRatio;\n        const scaledW = Math.floor(dpr * w);\n        const scaledH = Math.floor(dpr * h);\n        this.bgCanvas.width = scaledW;\n        this.bgCanvas.height = scaledH;\n        this.bgContext.scale(dpr, dpr);\n        this.melodyCanvas.width = scaledW;\n        this.melodyCanvas.height = scaledH;\n        this.melodyContext.scale(dpr, dpr);\n        this.noteCanvas.width = scaledW;\n        this.noteCanvas.height = scaledH;\n        this.noteContext.scale(dpr, dpr);\n        this.scaleX = scaleLinear()\n            .domain([-(this.timeSpan / 2), this.timeSpan / 2])\n            .range([0, w]);\n        let margin = h / (NOTE_STRINGS.length + 4);\n        this.scaleY = scaleLinear()\n            .domain([0, 2 * NOTE_STRINGS.length - 1])\n            .range([h - margin, margin]);\n        this.render();\n    }\n    // Returns nearest melody note by given time.\n    getNearestMelodyNote(time) {\n        if (!this.melodyNotes.length) {\n            return undefined;\n        }\n        const songPos = this.calculateSongPos(time);\n        for (let i = 0; i < this.melodyNotes.length; i++) {\n            const note = this.melodyNotes[i];\n            let start = 0;\n            if (i > 0) {\n                const prevNote = this.melodyNotes[i - 1];\n                // calculate time between two notes\n                start = (prevNote.start + prevNote.duration + note.start) / 2;\n            }\n            let end = Infinity;\n            if (i < this.melodyNotes.length - 1) {\n                // calculate time between two notes\n                const nextNote = this.melodyNotes[i + 1];\n                end = (note.start + note.duration + nextNote.start) / 2;\n            }\n            if (songPos >= start && songPos < end) {\n                return note;\n            }\n        }\n        // no note found\n        return undefined;\n    }\n    pushFrequency(frequency) {\n        // calculate pitch of the frequency\n        const f = frequency.frequency;\n        const note = noteFromPitch(f);\n        const centsOff = centsOffFromPitch(f, note);\n        const pitch = note + centsOff / 100;\n        let melodyPitch;\n        const nearestMelodyNote = this.getNearestMelodyNote(frequency.time);\n        if (nearestMelodyNote) {\n            // check if other octaves of this pitch are closer to the melody note\n            let diff = (pitch - nearestMelodyNote.pitch) % 12;\n            if (diff > 6) {\n                diff -= 12;\n            }\n            else if (diff < -6) {\n                diff += 12;\n            }\n            melodyPitch = nearestMelodyNote.pitch + diff;\n        }\n        this.frequencies.push(Object.assign(Object.assign({}, frequency), { pitch,\n            melodyPitch }));\n    }\n    cleanupFrequencies() {\n        // Throw away the frequencies that are out of the current display window\n        this.frequencies = this.frequencies.filter((val) => this.now - val.time < this.timeSpan / 2);\n    }\n    setMelodyNotes(melodyNotes) {\n        this.melodyNotes = melodyNotes;\n        this.melodyStart = melodyNotes.length ? melodyNotes[0].start : 0;\n    }\n    playSong() {\n        this.changePlayingSpeed(1);\n    }\n    fastForwardSong() {\n        this.changePlayingSpeed(3);\n    }\n    pauseSong() {\n        this.changePlayingSpeed(0);\n    }\n    calculateSongPos(now) {\n        return this.lastSongPos + this.playingSpeed * (now - this.speedChanged);\n    }\n    changePlayingSpeed(speed) {\n        const now = new Date().getTime();\n        if (this.speedChanged === undefined) {\n            this.speedChanged = now;\n        }\n        this.lastSongPos = this.calculateSongPos(now);\n        this.playingSpeed = speed;\n        this.speedChanged = now;\n    }\n    seekToFirstNote() {\n        this.changePlayingSpeed(0);\n        this.lastSongPos = this.melodyStart;\n    }\n    render(full = true) {\n        this.now = new Date().getTime();\n        // calculate song position\n        const songPos = this.calculateSongPos(this.now);\n        this.cleanupFrequencies();\n        if (full) {\n            this.drawBackground();\n        }\n        this.drawMelody(songPos);\n        this.drawNotes();\n        if (this.melodyNotes.length) {\n            this.drawTimeMarkers(songPos);\n        }\n        this.checkIntroState(songPos);\n    }\n    checkIntroState(songPos) {\n        const nowInIntro = songPos < this.melodyStart;\n        if (nowInIntro !== this.inIntro) {\n            this.inIntro = nowInIntro;\n            for (let i = 0; i < this.introStateListeners.length; i++) {\n                this.introStateListeners[i](nowInIntro);\n            }\n        }\n    }\n    setBackgroundColor(color) {\n        this.background = color;\n        this.drawBackground();\n    }\n    setHighlightColor(color) {\n        this.highlight = color;\n        this.drawBackground();\n    }\n    drawBackground() {\n        let w = this.container.clientWidth;\n        let h = this.container.clientHeight;\n        this.bgContext.fillStyle = this.background;\n        this.bgContext.clearRect(0, 0, w, h);\n        this.bgContext.fillRect(0, 0, w, h);\n        for (let i = 0; i < 2 * NOTE_STRINGS.length; ++i) {\n            let y = this.scaleY(i);\n            this.bgContext.fillStyle = this.highlight + '55';\n            this.bgContext.fillRect(0, y, w, 1);\n            this.bgContext.fillStyle = this.highlight;\n            this.bgContext.font = '14px Fira Sans';\n            this.bgContext.fillText(NOTE_STRINGS[i % NOTE_STRINGS.length], this.scaleX(0) + 20, y - 2);\n        }\n        this.bgContext.fillStyle = this.highlight + '55';\n        this.bgContext.fillRect(this.scaleX(0), 0, 1, h);\n    }\n    drawNotes() {\n        let w = this.container.clientWidth;\n        let h = this.container.clientHeight;\n        this.noteContext.clearRect(0, 0, w, h);\n        this.noteContext.beginPath();\n        this.noteContext.strokeStyle = 'rgba(0, 0, 0, 0.1)';\n        // Calculate notes and colors from frequencies\n        const notes = [];\n        for (let frequency of this.frequencies) {\n            let t = frequency.time;\n            let c = frequency.clarity;\n            let x = this.scaleX(t - this.now);\n            const pitch = frequency.melodyPitch\n                ? frequency.melodyPitch\n                : frequency.pitch;\n            let y = this.scaleY((pitch + NOTE_OFFSET) % 24);\n            // let color = colorFromNote(Math.floor(frequency.pitch));\n            const color = [254, 74, 73];\n            notes.push({\n                time: t,\n                x,\n                y,\n                clarity: c,\n                color,\n            });\n        }\n        // Draw circles\n        for (let note of notes) {\n            const { x, y, clarity, color } = note;\n            this.noteContext.fillStyle = `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${clarity * 0.5})`;\n            this.noteContext.beginPath();\n            this.noteContext.arc(x, y, 5, 0, Math.PI * 2);\n            this.noteContext.fill();\n        }\n    }\n    drawTimeMarkers(songPos) {\n        let h = this.container.clientHeight;\n        const marks = [];\n        const interval = 1000;\n        for (let i = -this.timeSpan / 2; i <= this.timeSpan / 2; i += interval) {\n            marks.push({\n                x: this.scaleX(i - (songPos % interval)),\n                y: h - 20,\n            });\n        }\n        this.noteContext.fillStyle = this.highlight;\n        for (let mark of marks) {\n            this.noteContext.beginPath();\n            this.noteContext.arc(mark.x, mark.y, 2, 0, Math.PI * 2);\n            this.noteContext.fill();\n        }\n    }\n    drawMelody(songPos) {\n        let w = this.container.clientWidth;\n        let h = this.container.clientHeight;\n        const ctx = this.melodyContext;\n        ctx.clearRect(0, 0, w, h);\n        ctx.strokeStyle = 'rgba(32, 164, 243, 0.8)';\n        ctx.lineWidth = h / 36;\n        ctx.lineCap = 'round';\n        for (let note of this.melodyNotes) {\n            const { start, duration, pitch } = note;\n            const startX = this.scaleX(start - songPos);\n            const endX = this.scaleX(start - songPos + duration);\n            const y = this.scaleY((pitch + NOTE_OFFSET) % 24);\n            ctx.beginPath();\n            // because lineCap is round, make line a bit shorter\n            ctx.moveTo(startX + ctx.lineWidth / 2, y);\n            ctx.lineTo(endX - ctx.lineWidth / 2, y);\n            ctx.stroke();\n        }\n    }\n}\nexport { PitchDisplay };\n","import React, { useState } from 'react';\nimport {\n  PauseCircleFill,\n  SkipBackwardCircleFill,\n  SkipEndCircleFill,\n  SkipStartCircleFill,\n  StopCircleFill,\n} from 'react-bootstrap-icons';\n\nimport './button.css';\n\nfunction ControlButton({\n  color,\n  colorPressed,\n  className,\n  Icon,\n  onCancel,\n  onPress,\n  onRelease,\n  size,\n}) {\n  const [pressed, setPressed] = useState(false);\n  const handlePress = () => {\n    setPressed(true);\n    if (onPress) {\n      onPress();\n    }\n  };\n  const handleRelease = () => {\n    setPressed(false);\n    if (onRelease) {\n      onRelease();\n    }\n  };\n  const handleCancel = () => {\n    setPressed(false);\n    if (onCancel) {\n      onCancel();\n    }\n  };\n  return (\n    <div\n      className={`ctrl-btn ${pressed ? 'ctrl-btn-pressed' : ''} ${className}`}\n      onMouseDown={handlePress}\n      onMouseUp={handleRelease}\n      onMouseLeave={handleCancel}\n      onTouchStart={handlePress}\n      onTouchEnd={handleRelease}\n      onTouchCancel={handleCancel}\n    >\n      <Icon color={pressed ? colorPressed : color} size={size} />\n    </div>\n  );\n}\n\nexport const ForwardButton = (props) => (\n  <ControlButton Icon={SkipBackwardCircleFill} {...props} />\n);\n\nexport const PauseButton = (props) => (\n  <ControlButton Icon={PauseCircleFill} {...props} />\n);\n\nexport const StopButton = (props) => (\n  <ControlButton Icon={StopCircleFill} {...props} />\n);\n\nexport const SkipStartButton = (props) => {\n  // Change icon until user releases the button in skip intro mode.\n  // This prevents a bug on iOS where long pressing the button\n  // never receives onTouchCancel event when the icon changes meanwhile.\n  const [skipIntroMode, setSkipIntroMode] = useState(false);\n  const onPress = () => {\n    if (props.inIntro) {\n      setSkipIntroMode(true);\n    }\n    props.onPress();\n  };\n  const onCancel = () => {\n    if (skipIntroMode) {\n      setSkipIntroMode(false);\n    }\n    props.onCancel();\n  };\n  const onRelease = () => {\n    if (skipIntroMode) {\n      setSkipIntroMode(false);\n    }\n    props.onRelease();\n  };\n  const icon =\n    props.inIntro || skipIntroMode ? SkipEndCircleFill : SkipStartCircleFill;\n  return (\n    <ControlButton\n      Icon={icon}\n      {...props}\n      onPress={onPress}\n      onRelease={onRelease}\n      onCancel={onCancel}\n    />\n  );\n};\n","export const BACKGROUND = '#e8eaec';\n\nexport const PRIMARY = '#3f51b5';\nexport const PRIMARY_LIGHT = '#757de8';\nexport const PRIMARY_DARK = '#002984';\nexport const PRIMARY_TEXT = '#ffffff';\n\nexport const SECONDARY = '#9c27b0';\nexport const SECONDARY_LIGHT = '#d05ce3';\nexport const SECONDARY_DARK = '#6a0080';\nexport const SECONDARY_TEXT = '#ffffff';\n","import {\n  action,\n  Action,\n  createStore,\n  createTypedHooks,\n  thunk,\n  Thunk,\n} from 'easy-peasy';\nimport { Connection, ParentHandshake, WorkerMessenger } from 'post-me';\n\ntype Detector = 'mcleod' | 'autocorrelation';\n\ntype ErrorType = 'audio-context' | 'mic-stream' | 'worker';\n\ninterface IMelodyNote {\n  start: number;\n  duration: number;\n  pitch: number;\n}\n\ntype IMelodyNotes = IMelodyNote[];\n\ninterface Melody {\n  title: string;\n  notes: IMelodyNotes;\n}\n\ninterface StoreModel {\n  windowSize: number;\n  setWindowSize: Action<StoreModel, number>;\n\n  detectorName: Detector;\n  setDetectorName: Action<StoreModel, Detector>;\n\n  clarityThreshold: number;\n  setClarityThreshold: Action<StoreModel, number>;\n\n  enabled: boolean;\n  setEnabled: Action<StoreModel, boolean>;\n\n  stream: MediaStream | null | undefined;\n  audioOptions: MediaStreamConstraints;\n  setStream: Action<StoreModel, MediaStream | null>;\n  loading: boolean;\n  setLoading: Action<StoreModel, boolean>;\n  loaded: boolean;\n  setLoaded: Action<StoreModel, boolean>;\n  initializeStream: Thunk<StoreModel, void>;\n  stopStream: Thunk<StoreModel, void>;\n\n  workerConnection: Connection | null | undefined;\n  setWorkerConnection: Action<StoreModel, Connection | null>;\n  initializeWorker: Thunk<StoreModel, void>;\n\n  melody: Melody;\n  setMelodyNotes: Action<StoreModel, IMelodyNotes>;\n  error: ErrorType;\n}\n\nexport const store = createStore<StoreModel>({\n  // Default values\n  windowSize: 2048, // 1024\n  detectorName: 'mcleod',\n  clarityThreshold: 0.7, // 0.5\n  enabled: false,\n  loading: false,\n  loaded: false,\n  stream: null,\n  audioOptions: { audio: { echoCancellation: true, autoGainControl: true } },\n  workerConnection: null,\n  melody: {},\n  error: null,\n\n  setWindowSize: action((state, payload) => {\n    state.windowSize = payload;\n  }),\n  setDetectorName: action((state, payload) => {\n    state.detectorName = payload;\n  }),\n  setClarityThreshold: action((state, payload) => {\n    state.clarityThreshold = payload;\n  }),\n  setEnabled: action((state, payload) => {\n    state.enabled = payload;\n  }),\n  setStream: action((state, payload) => {\n    state.stream = payload;\n  }),\n  setLoading: action((state, payload) => {\n    state.loading = payload;\n  }),\n  setLoaded: action((state, payload) => {\n    state.loaded = payload;\n  }),\n  setWorkerConnection: action((state, payload) => {\n    state.workerConnection = payload;\n  }),\n  setError: action((state, payload) => {\n    state.error = payload;\n  }),\n  checkAudioContextSupport: thunk((actions, payload, { getState }) => {\n    // Safari and old versions of Chrome use window.webkitAudioContext\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    if (AudioContext === undefined) {\n      // browser does not support Audio Context\n      actions.setError('audio-context');\n      console.error('Browser does not have window.AudioContext support');\n    }\n  }),\n  initializeStream: thunk(async (actions, payload, { getState }) => {\n    const state = getState();\n    const options = state.audioOptions;\n\n    actions.setLoading(true);\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia(options);\n      actions.setStream(stream);\n      actions.setLoading(false);\n      actions.setLoaded(true);\n    } catch (e) {\n      actions.setError('mic-stream');\n      console.error(e);\n      actions.setStream(null);\n      actions.setLoading(false);\n      actions.setLoaded(false);\n    }\n  }),\n  stopStream: thunk(async (actions, payload, { getState }) => {\n    const stream = getState().stream;\n\n    if (stream) {\n      for (const track of stream.getTracks()) {\n        track.stop();\n      }\n    }\n\n    actions.setStream(null);\n    actions.setLoading(false);\n    actions.setLoaded(false);\n  }),\n  initializeWorker: thunk(async (actions) => {\n    const worker = new Worker(\n      `${process.env.PUBLIC_URL}/pitch-detection/worker.js`\n    );\n\n    const messenger = new WorkerMessenger({ worker });\n\n    try {\n      const connection = await ParentHandshake(messenger, {}, 5, 1000);\n      actions.setWorkerConnection(connection);\n    } catch (e) {\n      actions.setError('worker');\n      console.error('Failed to connect to worker', e);\n      actions.setWorkerConnection(null);\n    }\n  }),\n\n  setMelodyNotes: action((state, payload) => {\n    state.melody.notes = payload;\n  }),\n});\n\n// Create a version of the standard hooks that always references our `StoreModel` type\nconst typedHooks = createTypedHooks<StoreModel>();\n\nexport const useStoreActions = typedHooks.useStoreActions;\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\nexport const useStoreState = typedHooks.useStoreState;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Navbar, Popover, OverlayTrigger } from 'react-bootstrap';\n\nimport { PitchDisplay } from 'pitch-display';\n\nimport {\n  ForwardButton,\n  PauseButton,\n  SkipStartButton,\n  StopButton,\n} from '../button';\nimport { BACKGROUND } from '../../constants/colors';\nimport { useStoreActions, useStoreState } from '../../model';\n\n// Custom React hook for requestAnimationFrame\nconst useAnimationFrame = (callback) => {\n  const requestRef = useRef();\n\n  useEffect(() => {\n    const animate = (time) => {\n      callback(time);\n      requestRef.current = requestAnimationFrame(animate);\n    };\n\n    requestRef.current = requestAnimationFrame(animate);\n\n    return () => {\n      cancelAnimationFrame(requestRef.current);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // run this effect only once\n};\n\nexport interface PitchProps {\n  freq: number | null;\n  clarity: number | null;\n}\n\nfunction PitchComponent({ freq, clarity }: PitchProps) {\n  const pitchDisplay = useRef();\n  const [inIntro, setInIntro] = useState(false);\n\n  const updatePitch = useCallback(() => {\n    if (!pitchDisplay.current) {\n      return;\n    }\n\n    if (freq && freq > 0) {\n      const time = new Date().getTime();\n      pitchDisplay.current.pushFrequency({\n        frequency: freq,\n        clarity: clarity || 0,\n        time,\n      });\n    }\n    pitchDisplay.current.render(false);\n  }, [clarity, freq]);\n\n  if (freq && freq > 0) {\n    requestAnimationFrame((time) => updatePitch(time));\n  }\n\n  // Keep rendering and scrolling pitchDisplay at regular time intervals\n  // even though the note has not changed\n  useAnimationFrame(updatePitch);\n\n  useEffect(() => {\n    const onResize = () => {\n      if (pitchDisplay.current) {\n        pitchDisplay.current.resize();\n      }\n    };\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  const notes = useStoreState((state) => state.melody.notes);\n  const hasNotes = notes && notes.notes && notes.notes.length;\n  useEffect(() => {\n    if (pitchDisplay.current && notes && notes.notes) {\n      pitchDisplay.current.setMelodyNotes(notes.notes);\n    }\n  }, [notes]);\n\n  const { stopStream, setEnabled } = useStoreActions((actions) => actions);\n\n  const btnSize = 50;\n  const btnColor = BACKGROUND;\n  const btnColorPressed = '#a6a8aa';\n\n  const onDisplayRef = useCallback(\n    (element) => {\n      if (element && !pitchDisplay.current) {\n        pitchDisplay.current = new PitchDisplay(element, 6000);\n        pitchDisplay.current.setBackgroundColor(BACKGROUND);\n        if (notes) {\n          pitchDisplay.current.setMelodyNotes(notes);\n        }\n        pitchDisplay.current.playSong();\n      }\n    },\n    [notes]\n  );\n\n  useEffect(() => {\n    if (pitchDisplay.current) {\n      return pitchDisplay.current.subscribeToIntroState((val) =>\n        setInIntro(val)\n      );\n    }\n  }, []);\n\n  const onStop = async () => {\n    setEnabled(false);\n    await stopStream();\n    console.log('Stream Stopped');\n  };\n\n  const skipIntroTitle = 'Skip intro';\n  const skipIntroBody = 'Press and hold until you start singing.';\n  const skipIntroPopover = (\n    <Popover id=\"popover-skip-intro\" className=\"unselectable\">\n      <Popover.Title as=\"h3\">{skipIntroTitle}</Popover.Title>\n      <Popover.Content>{skipIntroBody}</Popover.Content>\n    </Popover>\n  );\n\n  return (\n    <React.Fragment>\n      <div className=\"full unselectable\" ref={onDisplayRef} />\n      <div className=\"navbar-space unselectable\" />\n      <Navbar\n        fixed=\"bottom\"\n        bg=\"dark\"\n        className=\"justify-content-center unselectable\"\n      >\n        {hasNotes && (\n          <OverlayTrigger\n            show={inIntro}\n            placement=\"top\"\n            overlay={skipIntroPopover}\n          >\n            <SkipStartButton\n              onPress={() => pitchDisplay.current.seekToFirstNote()}\n              onRelease={() => pitchDisplay.current.playSong()}\n              onCancel={() => pitchDisplay.current.playSong()}\n              className=\"btn-skip-start\"\n              size={btnSize}\n              color={btnColor}\n              colorPressed={btnColorPressed}\n              inIntro={inIntro}\n            />\n          </OverlayTrigger>\n        )}\n        {hasNotes && (\n          <PauseButton\n            onPress={() => pitchDisplay.current.pauseSong()}\n            onRelease={() => pitchDisplay.current.playSong()}\n            onCancel={() => pitchDisplay.current.playSong()}\n            className=\"btn-pause\"\n            size={btnSize}\n            color={btnColor}\n            colorPressed={btnColorPressed}\n          />\n        )}\n        <StopButton\n          onRelease={onStop}\n          className=\"btn-stop\"\n          size={btnSize}\n          color={btnColor}\n          colorPressed={btnColorPressed}\n        />\n        {hasNotes && (\n          <ForwardButton\n            onPress={() => pitchDisplay.current.fastForwardSong()}\n            onRelease={() => pitchDisplay.current.playSong()}\n            className=\"btn-forward\"\n            size={btnSize}\n            color={btnColor}\n            colorPressed={btnColorPressed}\n          />\n        )}\n      </Navbar>\n    </React.Fragment>\n  );\n}\n\nexport default PitchComponent;\n","import { Connection } from 'post-me';\nimport React from 'react';\nimport { WorkerMethods } from '../../../worker/types';\n\ninterface PitchSetup {\n  analyser?: AnalyserNode;\n  audioContext?: AudioContext;\n  buffer?: Float32Array;\n}\ninterface PitchProps {\n  stream: MediaStream;\n  workerConnection: Connection<{}, WorkerMethods, {}>;\n  detectorName: 'autocorrelation' | 'mcleod';\n  windowSize: number;\n  powerThreshold: number;\n  clarityThreshold: number;\n  enabled: boolean;\n  pitchRenderer: React.ComponentType<{\n    freq: number | null;\n    clarity: number | null;\n  }>;\n}\n\n// Converts byte buffer to float buffer. Buffers must have same length.\nconst convertByteToFloatBuffer = (byteBuf, floatBuf) => {\n  for (let i = 0; i < byteBuf.length; i++) {\n    floatBuf[i] = byteBuf[i] / 128 - 1;\n  }\n};\n\n/**\n * While `enabled` is truthy, get the pitch from the input source,\n * and pass its frequency and clarity to `pitchRenderer`.\n *\n * `pitchRenderer` should be a react component that accepts `freq` and `clarity`\n * props.\n *\n * @export\n * @param {PitchProps} {\n *   stream,\n *   detectorName,\n *   workerConnection,\n *   windowSize,\n *   powerThreshold,\n *   clarityThreshold,\n *   enabled,\n *   pitchRenderer,\n * }\n * @returns\n */\nexport function PitchMonitor({\n  stream,\n  detectorName,\n  workerConnection,\n  windowSize,\n  powerThreshold,\n  clarityThreshold,\n  enabled,\n  pitchRenderer,\n}: PitchProps) {\n  const [freq, setFreq] = React.useState<number | null>(null);\n  const [clarity, setClarity] = React.useState<number | null>(null);\n  const pendingRef = React.useRef(false);\n  const pitchSetupRef = React.useRef<PitchSetup>({});\n\n  // Gets called first-thing whenever this component's props change.\n  const setupConnection = React.useCallback(async () => {\n    await workerConnection\n      .remoteHandle()\n      .call('createDetector', detectorName, windowSize, windowSize / 2);\n    const pitchSetup = pitchSetupRef.current;\n    pitchSetup.buffer = new Float32Array(windowSize);\n    // Old browsers use webkitAudioContext\n    pitchSetup.audioContext = new (window.AudioContext ||\n      window.webkitAudioContext)();\n    // Create an AudioNode from the stream.\n    const mediaStreamSource = pitchSetup.audioContext.createMediaStreamSource(\n      stream\n    );\n    // Connect it to the destination.\n    pitchSetup.analyser = pitchSetup.audioContext.createAnalyser();\n    if (pitchSetup.analyser.getFloatTimeDomainData === undefined) {\n      // byte buffer is needed for support for incomplete audio API implementation\n      pitchSetup.byteBuffer = new Uint8Array(windowSize);\n    }\n    pitchSetup.analyser.fftSize = windowSize;\n    mediaStreamSource.connect(pitchSetup.analyser);\n  }, [pitchSetupRef, windowSize, detectorName, stream, workerConnection]);\n\n  // Find the current pitch/clarity and save it in `freq`/`clarity`.\n  const updatePitch = React.useCallback(async () => {\n    if (!pendingRef.current) {\n      pendingRef.current = true;\n\n      const pitchSetup = pitchSetupRef.current;\n      const { analyser, buffer, byteBuffer, audioContext } = pitchSetup;\n      if (!analyser || !buffer || !audioContext) {\n        console.warn(\n          'Trying to update the pitch, but missing an analyser/buffer/audioContext'\n        );\n        return;\n      }\n      if (analyser.getFloatTimeDomainData !== undefined) {\n        analyser.getFloatTimeDomainData(buffer);\n      } else {\n        // Some browsers do not have AnalyserNode.getFloatTimeDomainData() yet,\n        // so use getByteTimeDomainData method instead.\n        analyser.getByteTimeDomainData(byteBuffer);\n        convertByteToFloatBuffer(byteBuffer, buffer);\n      }\n      const result = await workerConnection\n        .remoteHandle()\n        .call(\n          'getPitch',\n          buffer,\n          audioContext.sampleRate,\n          powerThreshold,\n          clarityThreshold\n        );\n      const frequency = result[0];\n      const clarity = result[1];\n      if (frequency > 0) {\n        setFreq(frequency);\n        setClarity(clarity);\n      } else {\n        setFreq(null);\n        setClarity(null);\n      }\n\n      pendingRef.current = false;\n    }\n  }, [\n    pendingRef,\n    pitchSetupRef,\n    setFreq,\n    setClarity,\n    powerThreshold,\n    clarityThreshold,\n    workerConnection,\n  ]);\n\n  // This function only gets called when the dependencies update, and it automatically\n  // cleans up when it is called subsequent times. It starts an endless loop\n  // of computing the current pitch.\n  React.useEffect(() => {\n    if (!enabled) {\n      // This function runs whenever the state of `enabled` changes.\n      // When this function is re-run, it automatically cancels the\n      // the audio monitoring, so all we need to do is return here.\n      return;\n    }\n    console.log('Starting audio monitoring.');\n    const escape = { cancelRender: false };\n    function renderFrame() {\n      if (escape.cancelRender) {\n        return;\n      }\n      requestAnimationFrame(renderFrame);\n      updatePitch();\n    }\n    (async () => {\n      await setupConnection();\n      renderFrame();\n    })();\n\n    return () => {\n      console.log('Stopping audio monitoring.');\n      escape.cancelRender = true;\n    };\n  }, [setupConnection, updatePitch, enabled]);\n\n  const PitchRenderer = pitchRenderer;\n  return <PitchRenderer freq={freq} clarity={clarity} />;\n}\n","import React, { useEffect } from 'react';\nimport qs from 'qs';\n\nimport { useStoreActions } from '../../model';\nimport { decodeS1 } from '../../services/s1Encoding';\n\nconst readMelodyNotes = () => {\n  const params = qs.parse(window.location.search.substr(1));\n  if (params.s1) {\n    try {\n      return decodeS1(params.s1);\n    } catch (error) {\n      alert(error.toString());\n    }\n  }\n};\n\nexport function AppFrame({ children }: { children: React.ReactNode }) {\n  const { setMelodyNotes } = useStoreActions((actions) => actions);\n  useEffect(() => {\n    const notes = readMelodyNotes();\n    if (notes) {\n      setMelodyNotes(notes);\n    }\n  }, [setMelodyNotes]);\n\n  return (\n    <React.Fragment>\n      <div className=\"main-container\">{children}</div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\n\nimport './about.css';\n\nexport default function About() {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h3>FAQ</h3>\n          <h5>How does this app work?</h5>\n          <p>\n            If you opened this by a link that contains a melody, you can see the\n            information about it. By pressing start you can practice singing the\n            melody using your microphone.\n          </p>\n          <p>\n            If you can't see any song information, you can practice singing\n            without notes by pressing start.\n          </p>\n          <h5>Why doesn't this app work?</h5>\n          <p>\n            Make sure that your microphone is working and you have allowed this\n            site to use it. It's also possible that your browser does not\n            support the technology that this app uses. Try the newest Google\n            Chrome browser.\n          </p>\n          <h5>How does this app handle my voice?</h5>\n          <p>\n            The app respects your privacy. Your voice is not stored and is not\n            sent out from your browser. The app uses your mic only to detect the\n            pitch from your singing.\n          </p>\n          <h5>Where is the music?</h5>\n          <p>\n            This service does not contain any music for copyright reasons. Links\n            can be provided to play the music and to read the lyrics from other\n            services.\n          </p>\n          <h5>Will this app be always free?</h5>\n          <p>Yes. This is an open source project.</p>\n          <h3>Source</h3>\n          <p>\n            <a\n              href=\"https://github.com/vocalous/app\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              https://github.com/vocalous/app\n            </a>\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","// Uses Tiny URL API which is currently public and free.\n\nconst API = 'https://tinyurl.com/api-create.php?url=';\n\nexport async function shortenLink(longUrl) {\n  const url = `${API}${encodeURIComponent(longUrl)}`;\n  const response = await fetch(url);\n  if (response.ok) {\n    const shortUrl = await response.text();\n    return shortUrl;\n  } else {\n    console.error('Error response from Tiny URL', response);\n    return undefined;\n  }\n}\n","// https://thebrickyblog.wordpress.com/2011/01/27/ultrastar-txt-files-in-more-depth/\n\n// Parses content of UltraStar TXT song file and returns parsed data as object.\nexport function parseUltraStarTxt(data) {\n  let bpm; // beats per quarter minute\n  let beatDuration; // duration of a beat in milliseconds\n\n  let gap = 0;\n  const notes = [];\n  const lines = data.split('\\n');\n\n  function setBPM(value) {\n    bpm = value;\n    beatDuration = 60000 / value / 4;\n  }\n\n  setBPM(180); // default\n\n  function parseHeader(line) {\n    const parts = line.substr(1).split(':');\n    const key = parts[0].toLowerCase();\n    const value = parts[1];\n    if (key === 'bpm') {\n      const numValue = parseFloat(value.replace(',', '.'), 10);\n      setBPM(numValue);\n    } else if (key === 'gap') {\n      gap = parseFloat(value.replace(',', '.'), 10);\n    } else if (key === 'relative') {\n      throw new Error('Relative notes not supported!');\n    }\n  }\n\n  function parseNote(line) {\n    const parts = line.substr(2).split(' ');\n    if (parts.length > 3) {\n      const start = gap + parseInt(parts[0], 10) * beatDuration;\n      const duration = parseInt(parts[1], 10) * beatDuration;\n      const pitch = parseInt(parts[2], 10);\n\n      const floorStart = Math.floor(start);\n\n      // truncate previous note if needed\n      if (notes.length > 0) {\n        const prevNote = notes[notes.length - 1];\n        if (prevNote.start + prevNote.duration >= floorStart) {\n          prevNote.duration = floorStart - prevNote.start;\n        }\n      }\n\n      notes.push({\n        start: floorStart,\n        duration: Math.floor(duration),\n        pitch: pitch,\n      });\n    }\n  }\n\n  // start parsing\n  let section = 'header';\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    if (section === 'header') {\n      if (line.startsWith(': ')) {\n        section = 'notes';\n      } else if (line.startsWith('#')) {\n        parseHeader(line);\n      }\n    }\n    if (section === 'notes') {\n      if (\n        line.startsWith(': ') || // regular note\n        line.startsWith('G ') || // golden note\n        line.startsWith('F ')\n      ) {\n        // freestyle note\n        parseNote(line);\n      }\n    }\n  }\n\n  return {\n    bpm: bpm,\n    gap: gap,\n    notes: notes,\n  };\n}\n","import React, { useState } from 'react';\nimport { Button, Card, Col, Container, Form, Row } from 'react-bootstrap';\nimport qs from 'qs';\n\nimport { encodeS1 } from '../../services/s1Encoding';\nimport { shortenLink } from '../../services/tinyurl';\nimport { parseUltraStarTxt } from '../../services/ultrastar-parser';\n\nimport './importer.css';\n\nfunction FileForm({ onComplete }) {\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [musicLink, setMusicLink] = useState('');\n  const [lyricsLink, setLyricsLink] = useState('');\n  const [file, setFile] = useState();\n  const [validated, setValidated] = useState();\n  const [useTinyURL, setUseTinyURL] = useState(true);\n  const [creating, setCreating] = useState(false);\n  const [fileError, setFileError] = useState();\n\n  const generateURL = async (params) => {\n    const appPath = window.location.href.split('?')[0];\n    let queryParams = qs.stringify({\n      title: title ? title : undefined,\n      author: author ? author : undefined,\n      music: musicLink ? musicLink : undefined,\n      lyrics: lyricsLink ? lyricsLink : undefined,\n      ...params,\n    });\n    let url = `${appPath}?${queryParams}`;\n    if (onComplete) {\n      if (useTinyURL) {\n        url = await shortenLink(url);\n      }\n      onComplete(url);\n    }\n  };\n\n  const createS1Notes = async (data, form) => {\n    try {\n      const parsed = parseUltraStarTxt(data);\n      if (parsed && parsed.notes.length) {\n        if (form.checkValidity()) {\n          const encoded = encodeS1(parsed);\n          await generateURL({ s1: encoded });\n        }\n        setValidated(true);\n      } else {\n        // invalid file format, no notes found\n        setFileError('invalid');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n    setCreating(false);\n  };\n\n  const start = (form) => {\n    setCreating(true);\n    const reader = new FileReader();\n    reader.addEventListener('load', (evt2) => {\n      createS1Notes(reader.result, form);\n    });\n    reader.readAsText(file);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const form = event.currentTarget;\n    if (file) {\n      start(form);\n    } else {\n      setFileError('no-file');\n    }\n  };\n\n  const handleFileChange = (evt) => {\n    if (evt.target.files.length > 0) {\n      // use the first file\n      setFile(evt.target.files[0]);\n    } else {\n      setFile(undefined);\n    }\n    // clear file error\n    setFileError();\n    setValidated(false);\n  };\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Group>\n        <Form.Label>Song title</Form.Label>\n        <Form.Control\n          required\n          type=\"text\"\n          placeholder=\"Song title\"\n          value={title}\n          maxLength=\"64\"\n          onChange={(evt) => setTitle(evt.target.value)}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"import-file-group\">\n        <Form.File id=\"import-file\" custom>\n          <Form.File.Input\n            accept=\".txt\"\n            isInvalid={!!fileError}\n            onChange={handleFileChange}\n            required\n          />\n          <Form.File.Label>UltraStar TXT file</Form.File.Label>\n          <Form.Control.Feedback type=\"invalid\">\n            Make sure the file is in UltraStar TXT format and it contains at\n            least one note.\n          </Form.Control.Feedback>\n        </Form.File>\n        <Form.Text className=\"text-muted\">\n          The notes file. The lyrics are ignored.\n        </Form.Text>\n        {fileError && (\n          <div className=\"invalid-feedback\">\n            Foo Something wrong with the file. Make sure it is UltraStar TXT\n            file or it contains at least one note.\n          </div>\n        )}\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Link to song</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"https://songs.com/my-song\"\n          value={musicLink}\n          onChange={(evt) => setMusicLink(evt.target.value)}\n        />\n        <Form.Text className=\"text-muted\">\n          Optional link to the song where it can be played.\n        </Form.Text>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Link to lyrics</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"https://lyrics.com/my-lyrics\"\n          value={lyricsLink}\n          onChange={(evt) => setLyricsLink(evt.target.value)}\n        />\n        <Form.Text className=\"text-muted\">\n          Optional link to the song lyrics.\n        </Form.Text>\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>Link author</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"John Doe <john@doe.com>\"\n          value={author}\n          maxLength=\"64\"\n          onChange={(evt) => setAuthor(evt.target.value)}\n        />\n        <Form.Text className=\"text-muted\">\n          Optional information about who generated this link. Name, email, etc.\n        </Form.Text>\n      </Form.Group>\n      <Form.Group controlId=\"use-tinyurl\">\n        <Form.Check\n          type=\"switch\"\n          id=\"use-tinyurl-switch\"\n          label=\"Shorten link with TinyURL\"\n          checked={useTinyURL}\n          onChange={() => setUseTinyURL(!useTinyURL)}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Button type=\"submit\" variant=\"secondary\" disabled={creating}>\n          {creating ? 'CREATING...' : 'CREATE LINK'}\n        </Button>\n      </Form.Group>\n    </Form>\n  );\n}\n\nfunction CopyButton({ url }) {\n  const [copied, setCopied] = useState(false);\n  const handle = async () => {\n    await navigator.clipboard.writeText(url);\n    setCopied(true);\n  };\n  const txt = copied ? 'Copied!' : 'Copy';\n  return (\n    <Button onClick={handle} variant=\"secondary\">\n      {txt}\n    </Button>\n  );\n}\n\nfunction Result({ url }) {\n  if (!url) {\n    return null;\n  }\n  return (\n    <>\n      <Row className=\"mt-4 mb-3\">\n        <Col>\n          <div className=\"circled-nbr text-center\">3</div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card body>\n            <h4>The link is ready!</h4>\n            Anyone can practice the song using this link:\n            <br />\n            <span className=\"created-link\">{url}</span>\n            <div className=\"float-right\">\n              <CopyButton url={url} />\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default function Importer() {\n  const [url, setUrl] = useState();\n\n  return (\n    <Container>\n      <Row className=\"mb-4\">\n        <Col>\n          <div className=\"circled-nbr text-center\">1</div>\n          First you need <strong>the notes file in UltraStar TXT format</strong>\n          . If you can't find the notes file, you can create one by using an\n          editor like these:\n          <ul className=\"mt-3\">\n            <li>Yass - Karaoke Editor</li>\n            <li>Performous Composer</li>\n            <li>UltraStar Creator</li>\n          </ul>\n          Note that lyrics will be ignored.\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div className=\"circled-nbr text-center\">2</div>\n        </Col>\n      </Row>\n      <FileForm onComplete={(value) => setUrl(value)} />\n      <Result url={url} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\nexport default function ErrorModal({ error, show, onClose }) {\n  let txt = 'Oh no! Some error happened. Try using Google Chrome browser.';\n  if (error === 'mic-stream') {\n    txt = (\n      <div>\n        Oh no! This app cannot use your mic. Try to:\n        <ul>\n          <li>make sure you have the microphone connected</li>\n          <li>make sure you allowed this site to use your mic</li>\n          <li>use Google Chrome</li>\n        </ul>\n      </div>\n    );\n  } else if (error === 'audio-context') {\n    txt = (\n      <div>\n        Yikes! It seems that this app does not work on this device and/or\n        browser. Try Google Chrome.\n      </div>\n    );\n  }\n  return (\n    <Modal show={show} onHide={onClose} backdrop=\"static\" keyboard={false}>\n      <Modal.Header closeButton>\n        <Modal.Title>Error 😰</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{txt}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onClose}>\n          OK\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Container, Col, Row } from 'react-bootstrap';\nimport { PlayCircleFill } from 'react-bootstrap-icons';\nimport qs from 'qs';\nimport MetaTags from 'react-meta-tags';\n\nimport ErrorModal from '../error-modal';\nimport { useStoreActions, useStoreState } from '../../model';\n\nfunction StartButton() {\n  const [active, setActive] = useState(false);\n  const { initializeStream, setEnabled } = useStoreActions(\n    (actions) => actions\n  );\n\n  // Activate the button soon after it has been mounted.\n  // This prevents a bug where stop button touch triggers this button too\n  // when they are positioned equally.\n  useEffect(() => {\n    const handle = setTimeout(() => setActive(true), 500);\n    return () => clearTimeout(handle);\n  }, []);\n\n  const start = async () => {\n    await initializeStream();\n    setEnabled(true);\n    console.log('Stream Initialized');\n  };\n\n  const text = 'START';\n\n  return (\n    <Button\n      className=\"btn-start\"\n      variant=\"primary\"\n      onClick={start}\n      disabled={!active}\n    >\n      <div className=\"btn-start-content\">\n        <div className=\"btn-start-text\">{text}</div>\n        <PlayCircleFill size={40} color=\"white\" />\n      </div>\n    </Button>\n  );\n}\n\nfunction ExternalLink({ link, target }) {\n  return (\n    <a href={link} target={target ? target : '_blank'} rel=\"noreferrer\">\n      {link}\n    </a>\n  );\n}\n\nfunction SongInfo() {\n  const params = qs.parse(window.location.search.substr(1));\n  const { author, lyrics, music, title } = params;\n  const notes = useStoreState((state) => state.melody.notes);\n  if (!notes) {\n    return null;\n  }\n\n  // Use MetaTags to dynamically change meta tags in <head>,\n  // they are read by crawlers and social media preview fetchers\n  const newTitle = title ? `${title} – Vocalous` : undefined;\n  return (\n    <div className=\"song-info\">\n      {newTitle && (\n        <MetaTags id={title.replace(/[\\W_]+/g, 'x')}>\n          <title>{newTitle}</title>\n          <meta property=\"og:title\" content={newTitle} />\n        </MetaTags>\n      )}\n      <Container>\n        <Row>\n          <Col>\n            <h3>This link contains notes</h3>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={6}>\n            <div className=\"song-info-details\">\n              <div>\n                <strong>{title ? title : 'Untitled'}</strong>\n              </div>\n              {author && <div>{author}</div>}\n              {music && (\n                <div>\n                  Music: <ExternalLink link={music} target=\"music--page\" />\n                </div>\n              )}\n              {lyrics && (\n                <div>\n                  Lyrics: <ExternalLink link={lyrics} target=\"lyrics--page\" />\n                </div>\n              )}\n            </div>\n          </Col>\n          <Col md={6}>\n            <h5>Sing it!</h5>\n            <ol>\n              <li>Grab your headphones</li>\n              {music && <li>Start playing the music from the link</li>}\n              <li>\n                Press the <strong>start</strong> button and allow using your mic\n              </li>\n            </ol>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default function Sing() {\n  const error = useStoreState((state) => state.error);\n  const { setError } = useStoreActions((actions) => actions);\n  return (\n    <>\n      <SongInfo />\n      <Container>\n        <Row>\n          <Col className=\"text-center\">\n            <StartButton />\n          </Col>\n        </Row>\n      </Container>\n      <ErrorModal show={!!error} onClose={() => setError(null)} error={error} />\n    </>\n  );\n}\n","import React from 'react';\nimport { Nav, Tab } from 'react-bootstrap';\n\nimport About from './about';\nimport Importer from '../importer';\nimport Sing from './sing';\n\nfunction Header() {\n  return (\n    <div className=\"heading\">\n      <h1>VOCALOUS</h1>\n      <div>Practice singing for free</div>\n    </div>\n  );\n}\n\nfunction Tabs() {\n  return (\n    <Tab.Container id=\"tab-container\" defaultActiveKey=\"sing\">\n      <Nav variant=\"pills\">\n        <Nav.Item>\n          <Nav.Link eventKey=\"sing\">SING</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey=\"create\">CREATE</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey=\"help\">\n            <strong>?</strong>\n          </Nav.Link>\n        </Nav.Item>\n      </Nav>\n      <Tab.Content>\n        <Tab.Pane eventKey=\"sing\">\n          <Sing />\n        </Tab.Pane>\n        <Tab.Pane eventKey=\"create\">\n          <Importer />\n        </Tab.Pane>\n        <Tab.Pane eventKey=\"help\">\n          <About />\n        </Tab.Pane>\n      </Tab.Content>\n    </Tab.Container>\n  );\n}\n\nexport default function Main() {\n  return (\n    <>\n      <Header />\n      <Tabs />\n    </>\n  );\n}\n","import React from 'react';\n\nimport PitchComponent from './components/pitch';\nimport { PitchMonitor } from './components/pitch/pitch-monitor';\nimport { AppFrame } from './components/main/app-frame';\nimport { useStoreActions, useStoreState } from './model';\nimport Main from './components/main';\n\nfunction App() {\n  const POWER_THRESHOLD = 0.15;\n\n  const detectorName = useStoreState((state) => state.detectorName);\n  const windowSize = useStoreState((state) => state.windowSize);\n  const clarityThreshold = useStoreState((state) => state.clarityThreshold);\n  const enabled = useStoreState((state) => state.enabled);\n\n  const { loaded, stream, workerConnection } = useStoreState((state) => ({\n    loaded: state.loaded,\n    loading: state.loading,\n    stream: state.stream,\n    workerConnection: state.workerConnection,\n  }));\n\n  const { checkAudioContextSupport, initializeWorker } = useStoreActions(\n    (actions) => actions\n  );\n\n  React.useEffect(() => {\n    (async () => {\n      await initializeWorker();\n      console.log('Worker initialized');\n      await checkAudioContextSupport();\n    })();\n  }, [checkAudioContextSupport, initializeWorker]);\n\n  let mainDisplay = <Main />;\n  if (loaded && stream && workerConnection) {\n    const pitchRenderer = PitchComponent;\n    mainDisplay = (\n      <PitchMonitor\n        stream={stream}\n        detectorName={detectorName}\n        workerConnection={workerConnection}\n        windowSize={windowSize}\n        powerThreshold={POWER_THRESHOLD}\n        clarityThreshold={clarityThreshold}\n        enabled={enabled}\n        pitchRenderer={pitchRenderer}\n      />\n    );\n  }\n\n  return <AppFrame>{mainDisplay}</AppFrame>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { StoreProvider } from 'easy-peasy';\nimport { store } from './model';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// Encoder and decoder for melody notes so that they can be added to URL.\n// Binary data is base64 encoded with some characters replaced so that\n// it is safe to be used in URL. Encoding uses lossy compression, original\n// data loses some timing accuracy.\n//\n// Binary starts with 16-bit checksum.\n//\n// Notes follow either in 16-bit or 24-bit format.\n// 16-bit:\n// FXXXXXYYYYZZZZZZ\n// 24-bit:\n// FXXXXXXXXXXXYYYYYYZZZZZZ\n//\n// F: 0=16-bit note, 1=24-bit note\n// X: silence before this note, relative to the end of previous note (0.1 ms)\n// Y: duration (0.1 ms)\n// Z: pitch\n\n// To save space, use larger precision.\nconst PRECISION = 100; // in milliseconds\n\nconst SHORT_BITS = {\n  start: 5,\n  duration: 4,\n  pitch: 6,\n};\n\nconst LONG_BITS = {\n  start: 11,\n  duration: 6,\n  pitch: 6,\n};\n\n// Returns true if this note can be encoded with 16 bits.\nfunction canUseShort(start, duration) {\n  return start < 1 << SHORT_BITS.start && duration < 1 << SHORT_BITS.duration;\n}\n\n// Replaces some characters in base64 encoded data to be URL safe (RFC 3986):\n// '+' -> '_'\n// '/' -> '.'\n// '=' -> '-'\nfunction safeBase64(data) {\n  return data.replace(/\\+/g, '_').replace(/\\//g, '.').replace(/=/g, '-');\n}\n\nfunction unsafeBase64(data) {\n  return data.replace(/_/g, '+').replace(/\\./g, '/').replace(/-/g, '=');\n}\n\nexport function decodeS1(data) {\n  const notes = [];\n  const base64 = unsafeBase64(data);\n  const buffer = Buffer.from(base64, 'base64');\n\n  if (buffer.length < 2) {\n    throw new Error('No content');\n  }\n\n  let pos = 0;\n  let checksum = 0;\n  // read original 16-bit checksum\n  const origChecksum = buffer.readUInt16BE(pos);\n  pos += 2;\n\n  // read 16-bit timestamp\n  const days = buffer.readUInt16BE(pos);\n  pos += 2;\n  checksum += days;\n  const created = new Date(days * 86400000);\n\n  // read content\n  let lastEnd = 0;\n  while (pos < buffer.length) {\n    // check first bit\n    const isLong = buffer.readUIntBE(pos, 1) & 128;\n    let bytes;\n    let start;\n    let duration;\n    let pitch;\n    if (isLong) {\n      // read 24-bit value\n      bytes = 3;\n      const value = buffer.readUIntBE(pos, bytes);\n      start =\n        (value >> (LONG_BITS.duration + LONG_BITS.pitch)) &\n        ((1 << LONG_BITS.start) - 1);\n      duration = (value >> LONG_BITS.pitch) & ((1 << LONG_BITS.duration) - 1);\n      pitch =\n        value & ((1 << LONG_BITS.pitch) - 1) & ((1 << LONG_BITS.pitch) - 1);\n      checksum += value;\n    } else {\n      // read 16-bit value\n      bytes = 2;\n      const value = buffer.readUIntBE(pos, bytes);\n      start =\n        (value >> (SHORT_BITS.duration + SHORT_BITS.pitch)) &\n        ((1 << SHORT_BITS.start) - 1);\n      duration = (value >> SHORT_BITS.pitch) & ((1 << SHORT_BITS.duration) - 1);\n      pitch =\n        value & ((1 << SHORT_BITS.pitch) - 1) & ((1 << SHORT_BITS.pitch) - 1);\n      checksum += value;\n    }\n\n    const note = {\n      start: lastEnd + start * PRECISION,\n      duration: duration * PRECISION,\n      pitch,\n    };\n    notes.push(note);\n    lastEnd = note.start + note.duration;\n    pos += bytes;\n  }\n\n  // 16-bit checksum\n  if ((checksum & 65535) !== origChecksum) {\n    throw new Error('Corrupted data: invalid checksum');\n  }\n\n  return {\n    created,\n    notes,\n  };\n}\n\nexport function encodeS1(data) {\n  const buffers = [];\n  let lastPos = 0;\n  let checksum = 0;\n\n  function bitHandle(value, valueBits, shiftBits) {\n    const max = (1 << valueBits) - 1;\n    if (value > max) {\n      throw new Error(\n        `${valueBits} bits not enough for value ${value}, use another encoding`\n      );\n    }\n    return value << shiftBits;\n  }\n\n  function addTimestamp() {\n    // add timestamp, days since epoch\n    const days = Math.floor(new Date().getTime() / 86400000);\n    const bytes = Buffer.alloc(2);\n    bytes.writeUInt16BE(days);\n    buffers.push(bytes);\n    checksum += days;\n  }\n\n  addTimestamp();\n\n  for (let i = 0; i < data.notes.length; i++) {\n    const note = data.notes[i];\n    const start = Math.floor((note.start - lastPos * PRECISION) / PRECISION);\n    const duration = Math.floor(note.duration / PRECISION);\n    lastPos += start + duration;\n    const pitch = note.pitch;\n\n    if (canUseShort(start, duration)) {\n      // we can write a note with 16 bits\n      let num = bitHandle(\n        start,\n        SHORT_BITS.start,\n        SHORT_BITS.duration + SHORT_BITS.pitch\n      );\n      num += bitHandle(duration, SHORT_BITS.duration, SHORT_BITS.pitch);\n      num += bitHandle(pitch, SHORT_BITS.pitch, 0);\n      const bytes = Buffer.alloc(2);\n      bytes.writeUInt16BE(num);\n      buffers.push(bytes);\n      checksum += num;\n    } else {\n      // write a note with 24 bits\n      let num = 1 << 23; // first bit indicates 24-bit note\n      num += bitHandle(\n        start,\n        LONG_BITS.start,\n        LONG_BITS.duration + LONG_BITS.pitch\n      );\n      num += bitHandle(duration, LONG_BITS.duration, LONG_BITS.pitch);\n      num += bitHandle(pitch, LONG_BITS.pitch, 0);\n      const bytes = Buffer.alloc(3);\n      bytes.writeUIntBE(num, 0, 3);\n      buffers.push(bytes);\n      checksum += num;\n    }\n  }\n\n  // add 16-bit checksum to the beginning of buffer\n  const checksumBuf = Buffer.alloc(2);\n  checksumBuf.writeUInt16BE(checksum & 65535);\n  buffers.unshift(checksumBuf);\n\n  const output = Buffer.concat(buffers).toString('base64');\n  return safeBase64(output);\n}\n"],"sourceRoot":""}